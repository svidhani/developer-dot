swagger: '2.0'
info:
  description: "The AvaTax REST API exposes the most commonly used available for interacting with the AvaTax service, allowing calculation of tax, modification of documents, and validation of addresses. If you're unsure of which API to use, a full comparison of the differences between the functionality provided by our REST and SOAP interfaces is documented [here](http://developer.avalara.com/api-docs/designing-your-integration/soap-or-rest).
  
  The [SOAP API reference](/avatax/api-reference/tax/soap/) is also available.
  
  A full set of sample requests is available as a [Postman collection](https://www.getpostman.com/collections/e362821310b01d7580e9)."
  
  version: '1.0'
  title: AvaTax REST API
  termsOfService: 'http://www.avalara.com/terms/'
  contact:
    name: 'For support, visit the Avalara Community'
    url: 'https://community.avalara.com/avalara/category_sets/developers'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: development.avalara.net
basePath: /1.0
schemes:
  - https
consumes:
  - text/json
  - text/xml
produces:
  - text/json
  - text/xml
security:
  - basic_auth: []
x-auth-formula: "`Basic ${btoa(`<username>:<password>`)}`"
x-sample-auth-header: "Basic aHR0cHdhdGNoOmY="
x-api-proxy: 
  route: https://xp0wfn7roi.execute-api.us-west-2.amazonaws.com/production/proxy
  key:
    name: api-key
    location: v2-devdot-keys/devdot-proxy-key
x-ApiType: REST
paths:
  '/tax/get':
    post:
      summary: Calculate Tax
      description: 'Calculates taxes on a document such as a sales order, sales invoice, purchase order, purchase invoice, or credit memo. To use an XML request/response, use the URL `/1.0/tax/get.xml`'
      operationId: getTax
      parameters:
        - in: body
          name: GetTaxRequest
          required: true
          schema:
            $ref: '#/definitions/GetTaxRequest'
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/GetTaxResult'
        '400':
          description: 'Unauthorized: Service raises a 400 when the credentials provided in the Authorization header are invalid.'
          schema: 
            $ref: '#/definitions/GetTaxError'
        '401':
          description: 'Unauthorized: Service raises a 401 when the Authorization header is missing or malformed.'
          schema: 
            $ref: '#/definitions/GetTaxError'
        '500':
          description: 'An Error Occurred: Service raises a 500 for any errors raised during the processing of a request.  For 500 errors, clients will need to inspect the Error Message returned in the response.'
          schema:
            $ref: '#/definitions/GetTaxError'
  '/address/validate':
    get:
      summary: Validate an Address
      description: 'Normalizes a single US or Canadian address, providing a non-ambiguous USPS address match. To recieve an XML response, use the URL `/1.0/address/validate.xml` and set the request header `Content-Type: text/xml`'
      operationId: validateAddress
      parameters: 
        - name: Line1
          required: true
          type: string
          description: Address line 1
          example: 400 Broad St
          in: query
          maxLength: 50
        - name: City
          required: false
          type: string
          description: City name. Optional unless PostalCode is not specified.
          example: Seattle
          in: query
          maxLength: 50
        - name: Region
          required: false
          type: string
          in: query
          maxLength: 3
          example: WA
        - name: Country
          in: query
          required: true
          type: string
          maxLength: 2
        - name: PostalCode
          in: query
          required: false
          type: string
          maxLength: 11
          example: 98109
      responses:
        '200':
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ValidateResult'
        '400':
          description: 'Unauthorized: Service raises a 400 when the credentials provided in the Authorization header are invalid.'
          schema: 
            $ref: '#/definitions/ValidateResultError'
        '401':
          description: 'Unauthorized: Service raises a 401 when the Authorization header is missing or malformed.'
          schema: 
            $ref: '#/definitions/ValidateResultError'
        '500':
          description: 'An Error Occurred: Service raises a 500 for any errors raised during the processing of a request.  For 500 errors, clients will need to inspect the Error Message returned in the response.'
          schema:
            $ref: '#/definitions/ValidateResultError'
securityDefinitions:
  basic_auth:
    type: basic
    description: "You will not be able to make web service calls until you have received an active account number and license key via email, or a username and password from the [sandbox registration](http://developer.avalara.com/getting-started). Authentication is in the format `Basic [account number]:[license key]` encoded to Base64, as per basic access authentication. For example: `Authorization: Basic a2VlcG1vdmluZzpub3RoaW5nMnNlZWhlcmU=`"
definitions:
  GetTaxRequest:
    required:
      - CustomerCode
      - Addresses
      - Lines
    properties:
      CustomerCode:
        maxLength: 50
        type: string
        example: ABC4335
        description: The case-sensitive client application customer reference code. This is required since it is the key to the Exemption Certificate Management Service in the Admin Console.
      Addresses:
        type: array
        items:
          $ref: '#/definitions/Address'
        description: ''
        xml:
          wrapped: true
      Lines:
        type: array
        items:
          $ref: '#/definitions/Line'
        description: Document line array. There is a limit of 15000 lines per document.
        xml:
          wrapped: true
  Line:
    description: Input property of the GetTaxRequest describing item lines.
    xml:
      name: Line
    required:
      - LineNo
      - DestinationCode
      - OriginCode
      - Qty
    properties:
      LineNo:
        maxLength: 50
        type: string
        example: '1'
        description: Line item identifier. LineId uniquely identifies the line item row.
      DestinationCode:
        type: string
        example: '01'
        description: Destination (ship-to) address code.DestinationCode references an address from the Addresses collection.
      OriginCode:
        type: string
        example: '02'
        description: Origination (ship-from) address code. OriginCode references an address from the Addresses collection.
      Qty:
        type: number
        example: '1'
        description: Item quantity. The tax engine does NOT use this as a multiplier with price to get the Amount.
      Amount:
        type: number
        example: '10'
        description: 'Total amount of item (extended amount, qty * unit price). If omitted, this value will default to 0'
  Address:
    description: Input property of GetTaxRequest representing addresses needed for tax calculations.
    xml:
      name: Address
    required:
      - AddressCode
      - Line1
      - City
      - Region
      - PostalCode
    properties:
      AddressCode:
        type: string
        example: '01'
        description: Reference code uniquely identifying this address instance.
      Line1:
        maxLength: 50
        type: string
        example: 45 Fremont Street
        description: 'Address line 1, required if Latitude and Longitude are not provided.'
      City:
        maxLength: 50
        type: string
        example: Chicago
        description: 'City name, required unless PostalCode is specified and/or Latitude and Longitude are provided.'
      Region:
        maxLength: 3
        type: string
        example: IL
        description: 'State, province, or region name. Required unless City is specified and/or Latitude and Longitude are provided.'
      Country:
        maxLength: 2
        type: string
        example: US
        description: "Country code. If not provided, will default to 'US'."
      PostalCode:
        maxLength: 11
        type: string
        example: '60602'
        description: 'Postal or ZIP code, Required unless City and Region are specified, and/or Latitude and Longitude are provided.'
  DocCode:
    maxLength: 50
    type: string
    example: INV001
    description: 'While this is an optional field, serious consideration should be given to using it. If no value is sent, AvaTax assigns a GUID value to keep the document unique, which can make reconciliation a challenge.'
  ResultCode:
    type: string
    example: Success
    description: 'Classifies severity of message. One of: Success, Warning, Error, Exception'
  ErrorResultCode:
    type: string
    example: Error
    description: 'Classifies severity of message. One of: Success, Warning, Error, Exception'
    xml:
      name: ResultCode
  Country:
    maxLength: 2
    type: string
    example: US
    description: Two character ISO country code.
  GetTaxError:
    xml:
      name: GetTaxResult
    properties:
      ResultCode:
        $ref: '#/definitions/ErrorResultCode'
      Messages:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Message'
  Message:
    properties:
      Summary:
        maxLength: 255
        type: string
        example: Company not found.  Verify the CompanyCode.
        description: The message summary in short form.
      Details:
        maxLength: 255
        type: string
        example: APITrialCompany
        description: Description of the error or warning.
      RefersTo:
        maxLength: 255
        type: string
        example: CompanyCode
        description: The data used during the request that caused the message to be generated.
      Source:
        maxLength: 255
        type: string
        example: Avalara.AvaTax.Services.Tax
        description: The internal location that generated the message.
      Severity:
        type: string
        example: Error
        description: "Classifies the severity of the message. One of: Success, Warning, Error, Exception."
    xml:
      name: Message
  TaxDetail:
    description: Tax details by jurisdiction
    xml:
      name: TaxDetail
    properties:
      Country:
        $ref: '#/definitions/Country'
      JurisName:
        type: string
        description: Name of a tax jurisdiction
        example: BAINBRIDGE ISLAND
        maxLength: 200
      JurisCode:
        type: string
        description: State assigned code identifying the jurisdiction. Note that this is not necessarily a unique identifier of the jurisdiction.
        example: 035
        maxLength: 200
      JurisType:
        type: string
        maxLength: 9
        enum:
          - State
          - County
          - City
          - Country
          - Special Tax Jurisdiction
      Rate:
        type: number
        format: decimal
        description: Effective tax rate for tax jurisdiction
        example: 0.022
      Region:
        type: string
        description: Region of tax jurisdiction
        example: WA
        maxLength: 3
      Tax:
        type: number
        format: decimal
        description: Tax amount
        example: 2.22
      TaxName:
        type: string
        description: Tax name
        example: WA CITY TAX
        maxLength: 75
  GetTaxResult:
    xml:
      name: GetTaxResult
    properties:
      DocCode:
        $ref: '#/definitions/DocCode'
      DocDate:
        type: string
        description: Date of invoice, sales order, purchase order, etc.
      TimeStamp:
        type: string
        format: date-time
        description: Server timestamp of request.
      TotalAmount:
        type: number
        description: Sum of all line Amount values.
      TotalDiscount:
        type: number
        description: Sum of all TaxLine discount amounts.
      TotalExemption:
        type: number
        description: Total exemption amount.
      TotalTaxable:
        type: number
        description: Total taxable amount.
      TotalTax:
        type: number
        description: Sum of all TaxLine tax amounts.
      TotalTaxCalculated:
        type: number
        description: TotalTaxCalculated indicates the total tax calculated by AvaTax. This is usually the same as the TotalTax, except when a tax override amount is specified. This is for informational purposes. The TotalTax will still be used for reporting.
      TaxDate: 
        type: string
        format: date
        description: Date used to assess tax rates and jurisdictions.
      TaxLines:
        type: array
        items:
          $ref: '#/definitions/TaxLine'
        xml:
          wrapped: true
      TaxSummary:
        type: array
        items:
          $ref: '#/definitions/TaxDetail'
        xml:
          wrapped: true
      TaxAddresses:
        type: array
        items:
          $ref: '#/definitions/TaxAddress'
        xml:
          wrapped: true
      ResultCode:
        $ref: '#/definitions/ResultCode'
  TaxLine:
    description: Tax calculation details for each item line (returned for detail levels Line and Tax).
    xml:
      name: TaxLine
    properties:
      LineNo:
        maxLength: 50
        type: string
        description: Line item identifier
      TaxCode:
        type: string
        description: The tax code used in calculating tax
        maxLength: 25
      Taxability:
        type: boolean
        description: Flag indicating item was taxable
      Taxable:
        type: number
        description: The amount that is taxable
      Rate:
        type: number
        description: Effective tax rate
      Tax:
        type: number
        description: Tax amount
      Discount: 
        type: number
        description: Discount amount
      TaxCalculated:
        type: number
        description: Amount of tax calculated
      Exemption:
        type: number
        description: Exempt amount
      BoundaryLevel:
        type: string
        description: 'The boundary level used to calculate tax: determined by the provided addresses'
        maxLength: 7
      TaxDetails:
        type: array
        items:
          $ref: '#/definitions/TaxDetail'
        xml:
          wrapped: true
  TaxAddress:
    description: TaxAddress represents canonical addresses used in tax calculation.
    xml:
      name: TaxAddress
    properties:
      Address:
        type: string
        description: Canonical street address
        maxLength: 50
      AddressCode:
        type: string
        description: Reference code uniquely identifying this address instance. AddressCode will always correspond to an address code supplied to in the address collection provided in the request.
      City:
        type: string
        description: City name
        maxLength: 50
      Region:
        type: string
        description: State or region name
        maxLength: 3
      Country:
        type: string
        description: 'Country code, as ISO 3166-1 (Alpha-2) country code (e.g. "US")'
        maxLength: 2
      PostalCode:
        type: string
        description: Postal code
        maxLength: 11
      Latitude:
        type: number
        description: 'Geographic latitude. If Latitude is defined, it is expected that the longitude field will also be provided. Failure to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      Longitude:
        type: number
        description: 'Geographic longitude. If Longitude is defined, it is expected that the latitude field will also be provided. Fail to do so will result in operation error. Calculation by latitude/longitude is available for the United States only. If a latitude/longitude value outside of the US is provided, the service will return an error.'
      TaxRegionId:
        type: number
        description: AvaTax tax region identifier
      JurisCode:
        type: string
        description: Tax jurisdiction code
  ValidateResult:
    description: Output for address/validate showing the validated address match or address validation errors.
    properties:
      Address:
        title: Address
        type: object
        properties:
          Line1:
            type: string
            example: 45 Fremont Street
            description: Address line 1
            maxLength: 50
          Line2:
            type: string
            example: Suite 100
            description: Address line 2
            maxLength: 50
          Line3:
            type: string
            example: ATTN Accounts Payable
            description: Address line 3
            maxLength: 50
          City:
            type: string
            example: Chicago
            description: City name
            maxLength: 50
          Region:
            type: string
            example: IL
            description: 'State, province, or region name.'
            maxLength: 3
          Country:
            type: string
            example: US
            description: Country code.
            maxLength: 2
          PostalCode:
            type: string
            example: '60602'
            description: Postal or ZIP code
            maxLength: 11
          AddressType:
            type: string
            description: 'Address type code. One of:\n * F - Firm or company address\n * G - General Delivery address\n * H - High-rise or business complex\n * P - PO Box address\n * R - Rural route address\n * S - Street or residential address' 
            maxLength: 1
          FipsCode:
            type: string
            description: 'FIPSCode is a unique 10-digit code representing each geographic combination of state, county, and city. The code is made up of the Federal Information Processing Code (FIPS) that uniquely identifies each state, county, and city in the U.S. Returned for US addresses only. Digits represent jurisdiction codes:\n * 1-2 State code\n * 3-5 County code\n * 6-10 City code'
            maxLength: 10
          CarrierRoute:
            type: string
            description: 'CarrierRoute is a four-character string representing a US postal carrier route. The first character of this property, the term, is always alphabetic, and the last three numeric. For example, “R001” or “C027” would be typical carrier routes. The alphabetic letter indicates the type of delivery associated with this address. Returned for US addresses only.\n * B - PO Box\n * C - City delivery\n * G - General delivery\n * H - Highway contract\n * R - Rural route'
            maxLength: 4
          PostNet:
            type: string
            description: 'POSTNet is a 12-digit barcode containing the ZIP Code, ZIP+4 Code, and the delivery point code, used by the USPS to direct mail. Returned for US addresses only digits represent delivery information:\n * 1-5 ZIP code\n * 6-9 Plus4 code\n * 10-11 Delivery point\n * 12 Check digit'
            maxLength: 12
      ResultCode:
        $ref: '#/definitions/ResultCode'
  ValidateResultError:
    xml:
      name: ValidateResult
    properties:
      ResultCode:
        $ref: '#/definitions/ErrorResultCode'
      Messages:
        type: array
        xml: 
          wrapped: true
        items:
          $ref: '#/definitions/Message'
