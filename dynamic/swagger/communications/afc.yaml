#*************************************************************************
#*                                                                       *
#* Copyright 2016 by Avalara, Inc.                                       *
#*   All Rights Reserved. No part of this publication may be reproduced, *
#*   stored in a retrieval system, or transmitted, in any form, by any   *
#*   means, without the prior written permission of the publisher.       *
#*                                                                       *
#*************************************************************************
#
# Description
#    Documentation for the SOAP, AFC SaaS Pro interface.
#
# Update History
#  Jeff Kastl       05/24/2016  Created
#  Mike Amos        10/10/2016  TAX-11501 to enhance current API documentation.
#  Mike Amos        10/24/2016  TAX-11502: Document additional APIs.
#
#*************************************************************************
#
swagger: '2.0'
info:
  title: AvaTax for Communications
  description: 'Documentation for using the AvaTax for Communication SOAP web service. The schemas and name spaces describe the BasicHttpBinding_IEZTaxWebService binding. Note: In most instances, the ezt Request Prefix may be overridden  by changing the "xmlns:ezt=" string to "xmlns:xxx=" where xxx represents one or more characters. In addition, removing the xmlns:ezt="http://schemas.datacontract.org/2004/07/EZTaxWebService" string often (but not always) results in a default Request Prefix of "a".'
  version: '1.0.0'
  termsOfService: 'http://www.avalara.com/terms/'
  contact:
    name: 'For support, email requests to CommunicationSupport@avalara.com'
    url: 'https://communications.avalara.com/'
host: eztaxasp.billsoft.com
schemes:
  - https
basePath: /EZTaxWebService
produces:
  - application/xml
consumes:
  - application/xml
x-ApiType: SOAP
x-wsdlPath: 'https://eztaxasp.billsoft.com/EZTaxWebService/EZTaxWebService.svc?wsdl'
x-basePath: 'https://eztaxasp.billsoft.com/EZTaxWebService/EZTaxWebService.svc'

################################################################################
#                                     Paths                                    #
################################################################################

paths:

# ============================
# === Begin Customer Batch ===
  /EZTaxWebService.svc?BeginCustomerBatch:
    post:
      description: This method flags the beginning of a customer transaction batch and returns a customer batch ID that can be used to submit each transaction and process the entire batch.
      operationId: BeginCustomerBatch
      summary: Begin Customer Batch
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/BeginCustomerBatch"
        - in: body
          name: BeginCustomerBatchEnvelope
          description: BeginCustomerBatch SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/BeginCustomerBatchEnvelope'
      responses:
        '200':
          description: Successfully returned the Batch ID.
          schema:
            $ref: '#/definitions/BeginCustomerBatchRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===============================
# === Calc Adj With Fips Code ===
# * CalcAdjWithFipsCode
  /EZTaxWebService.svc?CalcAdjWithFipsCode:
    post:
      description: 'This method accepts transaction data and performs appropriate tax adjustment calculations. Origination, Termination, and Bill To information is passed using FIPS Codes.

Adjustment transactions are primarily used to process refunds or credits. They rely on the AdjustmentMethod field.

Discounts can also be processed by setting the DiscountType field in the adjustment transaction.'
      operationId: CalcAdjWithFipsCode
      summary: 'Calculate Adjustments with Fips Code'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcAdjWithFipsCode"
        - in: body
          name: CalcAdjWithFipsCodeEnvelope
          description: CalcAdjWithFipsCode SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcAdjWithFipsCodeEnvelope'
      responses:
        '200':
          description: 'An array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcAdjWithFipsCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ============================
# === Calc Adj With NpaNxx ===
  /EZTaxWebService.svc?CalcAdjWithNpaNxx:
    post:
      description: This method accepts transaction data and performs appropriate tax calculations.  Origination, Termination, and Bill To information is passed using NpaNxx.
      operationId: CalcAdjWithNpaNxx
      summary: Calculate Adjustments With NpaNxx
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          default: 'http://tempuri.org/IEZTaxWebService/CalcAdjWithNpaNxx'
          x-example: "http://tempuri.org/IEZTaxWebService/CalcAdjWithNpaNxx"
        - in: body
          name: CalcAdjWithNpaNxxEnvelope
          description: CalcAdjWithNpaNxx SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcAdjWithNpaNxxEnvelope'
      responses:
        '200':
          description: Successfully returned an array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcAdjWithNpaNxxRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===============================
# === Calc Adj With Overrides ===
  /EZTaxWebService.svc?CalcAdjWithOverrides:
    post:
      description: 'Accepts transaction data and tax rate override data to perform tax adjustment calculations with provided override information.'
      operationId: CalcAdjWithOverrides
      summary: 'Calculate Adjustments with Overrides'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcAdjWithOverrides"
        - in: body
          name: CalcAdjWithOverridesEnvelope
          description: 'CalcAdjWithOverrides SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcAdjWithOverridesEnvelope'
      responses:
        '200':
          description: 'An array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcAdjWithOverridesRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===========================
# === Calc Adj with PCode ===
  /EZTaxWebService.svc?CalcAdjWithPCode:
    post:
      description: 'This method accepts transaction data and performs appropriate tax adjustment calculations. Origination, Termination, and Bill To information is passed using PCodes.'
      operationId: CalcAdjWithPCode
      summary: 'Calculate Adjustment with PCode.'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcAdjWithPCode"
        - in: body
          name: CalcAdjWithPCodeEnvelope
          description: 'CalcAdjWithPCode SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcAdjWithPCodeEnvelope'
      responses:
        '200':
          description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
          schema:
            $ref: '#/definitions/CalcAdjWithPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'



# =================================
# === Calc Adj with Zip Address ===
  /EZTaxWebService.svc?CalcAdjWithZipAddress:
    post:
      description: 'This method accepts transaction data and performs appropriate tax adjustment calculations. Origination, Termination, and Bill To information is passed using Zip addresses.'
      operationId: CalcAdjWithZipAddress
      summary: 'Calculate Adjustment with Zip Address'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcAdjWithZipAddress"
        - in: body
          name: CalcAdjWithZipAddressEnvelope
          description: 'CalcAdjWithZipAddress SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcAdjWithZipAddressEnvelope'
      responses:
        '200':
          description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
          schema:
            $ref: '#/definitions/CalcAdjWithZipAddressRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === Calc Cust Adj ===
  /EZTaxWebService.svc?CalcCustAdj:
    post:
      description: Submits an adjustment for the specified customer batch.
      operationId: CalcCustAdj
      summary: Calc Cust Adj
      parameters:
        - in: header
          name: SOAPAction
          x-example: "http://tempuri.org/IEZTaxWebService/CalcCustAdj"
          required: true
          type: string
        - in: body
          name: CalcCustAdjEnvelope
          description: CalcCustAdj SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcCustAdjEnvelope'
      responses:
        '200':
          description: Boolean indicating success (true) or failure (false).
          schema:
            $ref: '#/definitions/CalcCustAdjRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === CalcCustTaxes ===
  /EZTaxWebService.svc?CalcCustTaxes:
    post:
      description: 'Submits a single transaction to be processed for a customer batch.'
      operationId: CalcCustTaxes
      summary: 'Calculate Customer Taxes in Batch Mode.'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcCustTaxes"
        - in: body
          name: CalcCustTaxesEnvelope
          description: 'CalcCustTaxes SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcCustTaxesEnvelope'
      responses:
        '200':
          description: Boolean indicating success (true) or failure (false).
          schema:
            $ref: '#/definitions/CalcCustTaxesRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =========================
# === Calc Jurisdiction ===
  /EZTaxWebService.svc?CalcJurisdiction:
    post:
      description: Determines the taxing jurisdiction for a transaction and returns the PCode at the lowest jurisdiction level.
      operationId: CalcJurisdiction
      summary: Calculate Jurisdiction
      parameters:
        - in: header
          name: SOAPAction
          required: true
          x-example: "http://tempuri.org/IEZTaxWebService/CalcJurisdiction"
          type: string
        - in: body
          name: CalcJurisdictionEnvelope
          description: CalcJurisdiction SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcJurisdictionEnvelope'
      responses:
        '200':
          description: PCode for taxing jurisdiction.
          schema:
            $ref: '#/definitions/CalcJurisdictionRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ==================================
# === Calc Pro-Rated Adjustments ===
  /EZTaxWebService.svc?CalcProRatedAdj:
    post:
      description: Accepts a pro-rated percentage that is used to calculate the adjustment amount on the transaction and perform tax calculations. Bill To, Origination and Termination may be entered as PCode, FIPS Codes, Zip Address or NpaNxx.
      operationId: CalcProRatedAdj
      summary: Calculate Pro-rated Adjustments
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcProRatedAdj"
        - in: body
          name: CalcProRatedAdjEnvelope
          description: CalcProRatedAdj SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcProRatedAdjEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcProRatedAdjRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ============================
# === Calc Pro-Rated Taxes ===
  /EZTaxWebService.svc?CalcProRatedTaxes:
    post:
      description: Accepts a pro-rated percentage that is used to calculate the taxable amount on the transaction and perform tax calculations. Bill To, Origination and Termination may be entered as PCode, FIPS Codes, Zip Address or NpaNxx.
      operationId: CalcProRatedTaxes
      summary: Calculate Pro-rated Taxes
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcProRatedTaxes"
        - in: body
          name: CalcProRatedTaxesEnvelope
          description: CalcProRatedTaxes SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcProRatedTaxesEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcProRatedTaxesRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =======================================
# === Calc Reverse Adj With FIPS Code ===
  /EZTaxWebService.svc?CalcReverseAdjWithFipsCode:
    post:
      description: This method accepts transaction data and performs reverse adjustments in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using FIPS Codes.
      operationId: CalcReverseAdjWithFipsCode
      summary: Calculate Reverse Adjustments with FIPS Code
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseAdjWithFipsCode"
        - in: body
          name: CalcReverseAdjWithFipsCodeEnvelope
          description: CalcReverseAdjWithFipsCode SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcReverseAdjWithFipsCodeEnvelope'
      responses:
        '200':
          description: Returns the calculated base sale amount and an array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcReverseAdjWithFipsCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ====================================
# === Calc Reverse Adj With NpaNxx ===
  /EZTaxWebService.svc?CalcReverseAdjWithNpaNxx:
    post:
      description: 'This method accepts transaction data and performs reverse adjustments in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using NpaNxx values.'
      operationId: CalcReverseAdjWithNpaNxx
      summary: 'Calculate Reverse Adjustment With NpaNxx'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseAdjWithNpaNxx"
        - in: body
          name: CalcReverseAdjWithNpaNxxEnvelope
          description: 'CalcReverseAdjWithNpaNxx SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseAdjWithNpaNxxEnvelope'
      responses:
        '200':
          description: 'Returns the base sale amount and taxes for the desired total charge.'
          schema:
            $ref: '#/definitions/CalcReverseAdjWithNpaNxxRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===============================
# === CalcReverseAdjWithPCode ===
  /EZTaxWebService.svc?CalcReverseAdjWithPCode:
    post:
      description: 'This method accepts transaction data and performs reverse adjustments in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using PCodes.'
      operationId: CalcReverseAdjWithPCode
      summary: 'Calculate Reverse Adjustment with PCode'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseAdjWithPCode"
        - in: body
          name: CalcReverseAdjWithPCodeEnvelope
          description: 'CalcReverseAdjWithPCode SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseAdjWithPCodeEnvelope'
      responses:
        '200':
          description: 'Returns the calculated base sale amount and an array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcReverseAdjWithPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ======================================
# === Calc Reverse Adj With Zip Code ===
  /EZTaxWebService.svc?CalcReverseAdjWithZipCode:
    post:
      description: 'This method accepts transaction data and performs reverse adjustments in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using ZipAddress objects.'
      operationId: CalcReverseAdjWithZipCode
      summary: 'Calculate Reverse Adjustment With Zip Code'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseAdjWithZipCode"
        - in: body
          name: CalcReverseAdjWithZipCodeEnvelope
          description: 'CalcReverseAdjWithZipCode SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseAdjWithZipCodeEnvelope'
      responses:
        '200':
          description: 'Returns the calculated base sale amount and an array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcReverseAdjWithZipCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =========================================
# === Calc Reverse Taxes With Fips Code ===

  /EZTaxWebService.svc?CalcReverseTaxesWithFipsCode:
    post:
      description: 'This method accepts transaction data and performs a reverse tax calculation in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using FIPS Codes.'
      operationId: CalcReverseTaxesWithFipsCode
      summary: 'Calculate Reverse Taxes With FIPS Code'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseTaxesWithFipsCode"
        - in: body
          name: CalcReverseTaxesWithFipsCodeEnvelope
          description: 'CalcReverseTaxesWithFipsCodeEnvelope SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithFipsCodeEnvelope'
      responses:
        '200':
          description: 'Returns the calculated base sale amount and an array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithFipsCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ======================================
# === Calc Reverse Taxes With NpaNxx ===

  /EZTaxWebService.svc?CalcReverseTaxesWithNpaNxx:
    post:
      description: 'This method accepts transaction data and performs a reverse tax calculation in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using NpaNxxs.'
      operationId: CalcReverseTaxesWithNpaNxx
      summary: 'Calculate Reverse Taxes With NpaNxx'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseTaxesWithNpaNxx"
        - in: body
          name: CalcReverseTaxesWithNpaNxxEnvelope
          description: 'CalcReverseTaxesWithNpaNxxEnvelope SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithNpaNxxEnvelope'
      responses:
        '200':
          description: 'Returns the calculated base sale amount and an array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithNpaNxxRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================================
# === Calc Reverse Taxes With PCode ===

  /EZTaxWebService.svc?CalcReverseTaxesWithPCode:
    post:
      description: 'This method accepts transaction data and performs a reverse tax calculation in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using PCodes.'
      operationId: CalcReverseTaxesWithPCode
      summary: 'Calculate Reverse Taxes With PCode'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseTaxesWithPCode"
        - in: body
          name: CalcReverseTaxesWithPCodeEnvelope
          description: 'CalcReverseTaxesWithPCodeEnvelope SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithPCodeEnvelope'
      responses:
        '200':
          description: 'Returns the calculated base sale amount and an array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===========================================
# === Calc Reverse Taxes With Zip Address ===

  /EZTaxWebService.svc?CalcReverseTaxesWithZipAddress:
    post:
      description: 'This method accepts transaction data and performs a reverse tax calculation in order to arrive at the base sale amount and taxes for the desired total charge. Origination, Termination, and Bill To information is passed using Zip Addresses.'
      operationId: CalcReverseTaxesWithZipAddress
      summary: 'Calculate Reverse Taxes With Zip Address'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcReverseTaxesWithZipAddress"
        - in: body
          name: CalcReverseTaxesWithZipAddressEnvelope
          description: 'CalcReverseTaxesWithZipAddressEnvelope SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithZipAddressEnvelope'
      responses:
        '200':
          description: 'Returns the calculated base sale amount and an array of TaxData objects.'
          schema:
            $ref: '#/definitions/CalcReverseTaxesWithZipAddressRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===============================
# === Calc Taxes In Cust Mode ===
  /EZTaxWebService.svc?CalcTaxesInCustMode:
    post:
      description: Processes a batch of telecom and/or sales and use transactions and adjustments in customer mode.
      operationId: CalcTaxesInCustMode
      summary: 'Calculate Taxes in Customer/Invoice Mode'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcTaxesInCustMode"
        - in: body
          name: CalcTaxesInCustModeEnvelope
          description: CalcTaxesInCustMode SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcTaxesInCustModeEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcTaxesInCustModeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =================================
# === Calc Taxes With Fips Code ===
  /EZTaxWebService.svc?CalcTaxesWithFipsCode:
    post:
      description: This method accepts transaction data and performs appropriate tax calculations. Origination, Termination, and Bill To information is passed using FIPS Codes.
      operationId: CalcTaxesWithFipsCode
      summary: Calculate Taxes with Fips Code
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcTaxesWithFipsCode"
        - in: body
          name: CalcTaxesWithFipsCodeEnvelope
          description: CalcTaxesWithFipsCode SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcTaxesWithFipsCodeEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcTaxesWithFipsCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ==============================
# === Calc Taxes With NpaNxx ===
  /EZTaxWebService.svc?CalcTaxesWithNpaNxx:
    post:
      description: This method accepts transaction data and performs appropriate tax calculations. Origination, Termination, and Bill To information is passed using NpaNxx.
      operationId: CalcTaxesWithNpaNxx
      summary: Calculate Taxes with NpaNxx
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcTaxesWithNpaNxx"
        - in: body
          name: CalcTaxesWithNpaNxxEnvelope
          description: CalcTaxesWithNpaNxx SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcTaxesWithNpaNxxEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcTaxesWithNpaNxxRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =================================
# === Calc Taxes With Overrides ===
  /EZTaxWebService.svc?CalcTaxesWithOverrides:
    post:
      description: This method accepts transaction and override data and performs appropriate tax calculations. Origination, Termination, and Bill To information is passed using PCode, FIPS Code, NpaNxx, or Zip Address.
      operationId: CalcTaxesWithOverrides
      summary: Calculate Taxes with Overrides
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcTaxesWithOverrides"
        - in: body
          name: CalcTaxesWithOverridesEnvelope
          description: CalcTaxesWithOverrides SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcTaxesWithOverridesEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcTaxesWithOverridesRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =============================
# === Calc Taxes With PCode ===
  /EZTaxWebService.svc?CalcTaxesWithPCode:
    post:
      description: This method accepts transaction data and performs appropriate tax calculations. Origination, Termination, and Bill To information is passed using PCodes.
      operationId: CalcTaxesWithPCode
      summary: Calculate Taxes with PCode
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcTaxesWithPCode"
        - in: body
          name: CalcTaxesWithPCodeEnvelope
          description: CalcTaxesWithPCode SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcTaxesWithPCodeEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcTaxesWithPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===================================
# === Calc Taxes With Zip Address ===
  /EZTaxWebService.svc?CalcTaxesWithZipAddress:
    post:
      description: This method accepts transaction data and performs appropriate tax calculations. Origination, Termination, and Bill To information is passed using Zip Addresses.
      operationId: CalcTaxesWithZipAddress
      summary: Calculate Taxes with Zip Addresses
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CalcTaxesWithZipAddress"
        - in: body
          name: CalcTaxesWithZipAddressEnvelope
          description: CalcTaxesWithZipAddress SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/CalcTaxesWithZipAddressEnvelope'
      responses:
        '200':
          description: An array of TaxData objects.
          schema:
            $ref: '#/definitions/CalcTaxesWithZipAddressRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ====================
# === CreateReport ===
  /EZTaxWebService.svc?CreateReport:
    post:
      description: 'Submits a request for generating a custom report based on transactions and taxes that have been processed in the web service.'
      operationId: CreateReport
      summary: 'Create Report'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/CreateReport"
        - in: body
          name: CreateReportEnvelope
          description: 'CreateReport SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/CreateReportEnvelope'
      responses:
        '200':
          description: 'Returns a boolean indicating success (true) or failure (false).'
          schema:
            $ref: '#/definitions/CreateReportRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === Fips To PCode ===
  /EZTaxWebService.svc?FipsToPCode:
    post:
      summary: Fips to PCode
      operationId: FipsToPCode
      description: This method returns the PCode for the specified FIPS value.
      parameters:
        - in: header
          name: SOAPAction
          description: Required header value to identify the web method
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/FipsToPCode"
        - in: body
          description: FipsToPCode SOAP Envelope
          name: FipsToPCodeEnvelope
          required: true
          schema:
            $ref: '#/definitions/FipsToPCodeEnvelope'
      responses:
        '200':
          description: Returns an unsigned integer for the PCode.
          schema:
            $ref: '#/definitions/FipsToPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ==================
# === GetAddress ===
  /EZTaxWebService.svc?GetAddress:
    post:
      description: This method returns the addresses for the specified jurisdiction.
      operationId: GetAddress
      summary: Get Address
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetAddress"
        - in: body
          name: GetAddressEnvelope
          description: GetAddress SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/GetAddressEnvelope'
      responses:
        '200':
          description: Returns an array of `AddressData` objects.
          schema:
            $ref: '#/definitions/GetAddressRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =========================
# === GetEZTaxDbVersion ===
  /EZTaxWebService.svc?GetEZTaxDbVersion:
    post:
      description: 'This method returns the version of the underlying AFC database used by the AFC engine.'
      operationId: GetEZTaxDbVersion
      summary: 'Get EZTax DB Version'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetEZTaxDbVersion"
        - in: body
          name: GetEZTaxDbVersionEnvelope
          description: 'GetEZTaxDbVersion SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/GetEZTaxDbVersionEnvelope'
      responses:
        '200':
          description: 'Return the version of the AFC database used by the AFC Tax Engine.'
          schema:
            $ref: '#/definitions/GetEZTaxDbVersionRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =======================
# === GetEZTaxVersion ===
  /EZTaxWebService.svc?GetEZTaxVersion:
    post:
      description: 'This method returns the version of the AFC engine used in the background for performing tax calculations.'
      operationId: GetEZTaxVersion
      summary: 'Get EZTax Version'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetEZTaxVersion"
        - in: body
          name: GetEZTaxVersionEnvelope
          description: 'GetEZTaxVersion SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/GetEZTaxVersionEnvelope'
      responses:
        '200':
          description: 'Returns tax engine version used for performing background tax calculations.'
          schema:
            $ref: '#/definitions/GetEZTaxVersionRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'



# ===============================
# === GetOptionalFieldKeyDesc ===
  /EZTaxWebService.svc?GetOptionalFieldKeyDesc:
    post:
      description: 'This API returns the description for each optional field key in the OptionalField array of the Transaction that has been updated using the UpdateOptionalFieldKeyDesc API. The description values specified will be used when generating reports that contain these optional fields.'
      operationId: GetOptionalFieldKeyDesc
      summary: 'Get Optional Field Key Descriptions'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetOptionalFieldKeyDesc"
        - in: body
          name: GetOptionalFieldKeyDescEnvelope
          description: 'GetOptionalFieldKeyDesc SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/GetOptionalFieldKeyDescEnvelope'
      responses:
        '200':
          description: 'Return the descriptions.'
          schema:
            $ref: '#/definitions/GetOptionalFieldKeyDescRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === GetServerTime ===
  /EZTaxWebService.svc?GetServerTime:
    post:
      description: Get the current server time.
      operationId: GetServerTime
      summary: Get Server Time
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetServerTime"
        - in: body
          name: GetServerTimeEnvelope
          description: GetServerTime SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/GetServerTimeEnvelope'
      responses:
        '200':
          description: Returns a formatted date-time string.
          schema:
            $ref: '#/definitions/GetServerTimeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ======================
# === GetTaxCategory ===
  /EZTaxWebService.svc?GetTaxCategory:
    post:
      description: 'This method returns the tax category for the specified tax type.'
      operationId: GetTaxCategory
      summary: 'Get Tax Category'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetTaxCategory"
        - in: body
          name: GetTaxCategoryEnvelope
          description: 'GetTaxCategory SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/GetTaxCategoryEnvelope'
      responses:
        '200':
          description: 'Returns the tax category for a tax type.'
          schema:
            $ref: '#/definitions/GetTaxCategoryRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =========================
# === GetTaxDescription ===
  /EZTaxWebService.svc?GetTaxDescription:
    post:
      description: 'This method returns the description for the specified tax type.'
      operationId: GetTaxDescription
      summary: 'Get Tax Description'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetTaxDescription"
        - in: body
          name: GetTaxDescriptionEnvelope
          description: 'GetTaxDescription SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/GetTaxDescriptionEnvelope'
      responses:
        '200':
          description: 'Returns the tax description for the specified tax type.'
          schema:
            $ref: '#/definitions/GetTaxDescriptionRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === Get Tax Rates ===
  /EZTaxWebService.svc?GetTaxRates:
    post:
      description: Determines the tax rate information for a jurisdiction identified by the input PCode.
      operationId: GetTaxRates
      summary: Get Tax Rates
      parameters:
        - in: header
          name: SOAPAction
          description: Required header value to identify the web method
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetTaxRates"
        - in: body
          name: GetTaxRatesEnvelope
          description: GetTaxRates SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/GetTaxRatesEnvelope'
      responses:
        '200':
          description: Returns the Tax Rate information for a jurisdiction.
          schema:
            $ref: '#/definitions/GetTaxRatesRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ===================
# === Get Version ===
  /EZTaxWebService.svc?GetVersion:
    post:
      description: Returns the current version of the AvaTax for Communications service.
      operationId: GetVersion
      summary: Get Version
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/GetVersion"
        - in: body
          name: GetVersionEnvelope
          description: GetVersion SOAP Envelope
          required: true
          schema:
            $ref: '#/definitions/GetVersionEnvelope'
      responses:
        '200':
          description: Returns the current version of AvaTax for Communications.
          schema:
            $ref: '#/definitions/GetVersionRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =======================
# === NpaNxx To PCode ===
  /EZTaxWebService.svc?NpaNxxToPCode:
    post:
      summary: NpaNxx to PCode
      operationId: NpaNxxToPCode
      description: This method returns the PCode for the specified NpaNxx value.
      parameters:
        - in: header
          name: SOAPAction
          description: Required header value to identify the web method
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/NpaNxxToPCode"
        - in: body
          description: NpaNxxToPCode SOAP Envelope
          name: NpaNxxToPCodeEnvelope
          required: true
          schema:
            $ref: '#/definitions/NpaNxxToPCodeEnvelope'
      responses:
        '200':
          description: Returns the PCode as an unsigned integer.
          schema:
            $ref: '#/definitions/NpaNxxToPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === PCode To Fips ===
  /EZTaxWebService.svc?PCodeToFips:
    post:
      summary: PCode to Fips
      operationId: PCodeToFips
      description: This method returns the FIPS code for the specified PCode value.
      parameters:
        - in: header
          name: SOAPAction
          description: Required header value to identify the web method
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/PCodeToFips"
        - in: body
          description: PCodeToFips SOAP Envelope
          name: PCodeToFipsEnvelope
          required: true
          schema:
            $ref: '#/definitions/PCodeToFipsEnvelope'
      responses:
        '200':
          description: Returns the FIPS code as an unsigned integer.
          schema:
            $ref: '#/definitions/PCodeToFipsRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ============================
# === ProcessCustomerBatch ===
  /EZTaxWebService.svc?ProcessCustomerBatch:
    post:
      description: 'Processes a customer batch and returns the tax calculation results.'
      operationId: ProcessCustomerBatch
      summary: 'Process Customer Batch'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/ProcessCustomerBatch"
        - in: body
          name: ProcessCustomerBatchEnvelope
          description: 'ProcessCustomerBatch SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/ProcessCustomerBatchEnvelope'
      responses:
        '200':
          description: 'Returns a data structure containing an array of TaxData objects for each individual transaction processed and CustomerTaxData array containing the summarized taxes for the customer batch.'
          schema:
            $ref: '#/definitions/ProcessCustomerBatchRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ==================================
# === UpdateOptionalFieldKeyDesc ===
  /EZTaxWebService.svc?UpdateOptionalFieldKeyDesc:
    post:
      description: 'This API is used to update the description for each optional field key thereby indicating what each field in the OptionalField array of the Transaction is used for (e.g. invoice number, line item number, etc.). The values specified will be used when generating reports that contain these optional fields.'
      operationId: UpdateOptionalFieldKeyDesc
      summary: 'Update Optional Field KeyDescriptions'
      parameters:
        - in: header
          name: SOAPAction
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/UpdateOptionalFieldKeyDesc"
        - in: body
          name: UpdateOptionalFieldKeyDescEnvelope
          description: 'UpdateOptionalFieldKeyDesc SOAP Envelope'
          required: true
          schema:
            $ref: '#/definitions/UpdateOptionalFieldKeyDescEnvelope'
      responses:
        '200':
          description: Boolean indicating success (true) or failure (false).
          schema:
            $ref: '#/definitions/UpdateOptionalFieldKeyDescRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# =====================
# === Zip To PCode ===
  /EZTaxWebService.svc?ZipToPCode:
    post:
      summary: Zip to PCode
      operationId: ZipToPCode
      description: This method returns the PCode for the specified ZIP Address.
      parameters:
        - in: header
          name: SOAPAction
          description: Required header value to identify the web method
          required: true
          type: string
          x-example: "http://tempuri.org/IEZTaxWebService/ZipToPCode"
        - in: body
          description: ZipToPCode SOAP Envelope
          name: ZipToPCodeEnvelope
          required: true
          schema:
            $ref: '#/definitions/ZipToPCodeEnvelope'
      responses:
        '200':
          description: Returns the PCode as an unsigned integer.
          schema:
            $ref: '#/definitions/ZipToPCodeRespEnvelope'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/BadRequest'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/InternalServerError'

# ==============================
# === yyyy ===
#1 %%%%%%%%%%%%%%
#1  /EZTaxWebService.svc?yyyy:
#1    post:
#1      description: '????????????????????.'
#1      operationId: yyyy
#1      summary: '-=-=--=-=-=-=-=-=-=-=-=-=-'
#1      parameters:
#1        - in: header
#1          name: SOAPAction
#1          required: true
#1          type: string
#1          x-example: "http://tempuri.org/IEZTaxWebService/yyyy"
#1        - in: body
#1          name: yyyyEnvelope
#1          description: 'yyyy SOAP Envelope'
#1          required: true
#1          schema:
#1            $ref: '#/definitions/yyyyEnvelope'
#1      responses:
#1        '200':
#1          description: '??????????????????????.'
#1          schema:
#1            $ref: '#/definitions/yyyyRespEnvelope'
#1        '400':
#1          description: Bad Request
#1          schema:
#1            $ref: '#/definitions/BadRequest'
#1        '500':
#1          description: Internal Server Error
#1          schema:
#1            $ref: '#/definitions/InternalServerError'
#1 yyyy End point

################################################################################
#                                 Definitions                                  #
################################################################################
definitions:
# === Header ===
  Header:
    description: 'The SOAP API uses standard security to authenticate the account or user.'
    required:
      - Security
    properties:
      Security:
        $ref: '#/definitions/Security'
    xml:
      name: Header
      prefix: 's'
  Security:
    description: 'SOAP element containing authentication strategy.'
    required:
      - UsernameToken
    properties:
      UsernameToken:
        $ref: '#/definitions/UsernameToken'
    xml:
      name: Security
      prefix: 'o'
      namespace: 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
  UsernameToken:
    description: 'SOAP element containing username and password.'
    required:
      - Username
      - Password
    properties:
      Username:
        type: string
        description: 'Username for accessing service.'
        xml:
          name: Username
          prefix: 'o'
      Password:
        type: string
        description: 'Password for accessing service.'
        xml:
          name: Password
          prefix: 'o'
# === Header Response ===
  HeaderResp:
    description: 'The SOAP API uses standard security to authenticate the account or user.'
    properties:
      Security:
        $ref: '#/definitions/SecurityResp'
    xml:
      name: Header
      prefix: 's'
  SecurityResp:
    description: 'SOAP element containing response certification information.'
    required:
      - Timestamp
    properties:
      Timestamp:
        $ref: '#/definitions/TimestampResp'
    xml:
      name: Security
      prefix: 'o'
      namespace: 'http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd'
  TimestampResp:
    description: 'SOAP element containing time and date stamp.'
    properties:
      Created:
        type: string
        format: date-time
        description: 'Creation time and date.'
        xml:
          name: Created
          prefix: 'o'
      Expires:
        type: string
        description: 'Expiration time and date.'
        xml:
          name: Expires
          prefix: 'o'
# == BadRequest ==
  BadRequest:
    description: 'IIS rejection - Insure schemas match binding and that prefixes are matched.'
    type: string
# === Category Exemption ===
  CategoryExemption:
    description: Category Exemption Class
    required:
    - TaxCategory
    type: object
    properties:
      CountryISO:
        description: Three-character country ISO code. Required if State is not specified.
        type: string
        xml:
          prefix: ezt
      State:
        description: Two-character state abbreviation. Required if CountryISO is not specified.
        type: string
        xml:
          prefix: ezt
      TaxCategory:
        format: int32
        description: Valid tax category ID
        type: integer
        xml:
          prefix: ezt
# === ustBatchId ===
  custBatchId:
    type: number
    format: integer
    xml:
      prefix: tem
# === CustomerTaxData ===
  CustomerTaxData:
    description: Customer taxes when using Customer Mode.
    type: object
    properties:
      CalculationType:
        format: int32
        description: Calculation type. Please see CalculationType in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list.
        type: integer
        xml:
          prefix: &CustTaxDataPrefix a
      CategoryDescription:
        description: Tax category description.
        type: string
        xml:
          prefix: *CustTaxDataPrefix
      CategoryID:
        format: int32
        description: Tax category ID.
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      Description:
        description: Tax description.
        type: string
        xml:
          prefix: *CustTaxDataPrefix
      ExcessTax:
        format: double
        description: Rate for amount above max base.
        type: number
        xml:
          prefix: *CustTaxDataPrefix
      ExemptSaleAmount:
        format: double
        description: Amount of the charge exempt from taxes.
        type: number
      Lines:
        format: int32
        description: Number of lines used to calculate the tax (for per-line tax calculations).
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      Locations:
        format: int32
        description: Sum of locations from customer input.
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      MaxBase:
        format: double
        description: Max amount to which tax is applied.
        type: number
        xml:
          prefix: *CustTaxDataPrefix
      MinBase:
        format: double
        description: Min amount to which tax is applied.
        type: number
        xml:
          prefix: *CustTaxDataPrefix
      Minutes:
        format: double
        description: Number of minutes used to calculate the tax (for per-minute tax
          calculations).
        type: number
        xml:
          prefix: *CustTaxDataPrefix
      PCode:
        format: int32
        description: PCode for the reporting jurisdiction.
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      Rate:
        format: double
        description: Tax rate.
        type: number
        xml:
          prefix: *CustTaxDataPrefix
      Surcharge:
        format: int32
        description: Indicates if tax is considered a surcharge.
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      TaxAmount:
        format: double
        description: Tax amount.
        type: number
        xml:
          prefix: *CustTaxDataPrefix
      TaxLevel:
        format: int32
        description: Tax level. "Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Tax Levels."
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      TaxType:
        format: int32
        description: One of the Avalara tax types.
        type: integer
        xml:
          prefix: *CustTaxDataPrefix
      TotalCharge:
        format: double
        description: Sum of charges for this customer.
        type: number
        xml:
          prefix: *CustTaxDataPrefix

# === Exclusion ===
  Exclusion:
    xml:
      namespace: 'xmlns:ezt2="http://schemas.datacontract.org/2004/07/EZTaxWebService"'
      prefix: ezt
    description: Exclusions Class
    required:
      - CountryISO
      - ExclusionOn
      - State
    properties:
      CountryISO:
        description: Three-character country ISO code. Required if State not specified.
        type: string
      State:
        description: Two-character state abbreviation. Required if CountryISO not
          specified.
        type: string
      ExclusionOn:
        description: True if entity exclusion applies in the state, otherwise false.
        type: boolean
# == InternalServerError ==
  InternalServerError:
    required:
      - Fault
    properties:
      Fault:
        description: 'Error information.'
        xml:
          name: Fault
          prefix: s
        required:
          - faultcode
          - faultstring
        properties:
          faultcode:
            xml:
              name: faultcode
              namespace: "http://schemas.microsoft.com/net/2005/12/windowscommunicationfoundation/dispatcher"
            type: string
            description: 'Failure cause.'
          faultstring:
            xml:
              name: faultstring
            type: string
            description: 'Single string describing the failure.'
          detail:
            $ref: '#/definitions/FaultDetail'
  FaultDetail:
    xml:
      name: detail
    properties:
      ExceptionDetail:
        xml:
          name: ExceptionDetail
          namespace: xmlns="http://schemas.datacontract.org/2004/07/System.SOerviceModel" xmln\:i="http://www.w3.org/2001/XMLSchema-instance">
        properties:
          InnerException:
            xml:
              name: InnerException
            description: 'One or more levels of exception handling.'
            properties:
              ExceptionMessage:
                xml:
                  name: Message
                  wrapped: true
                description: 'One or more exception messages.'
                type: string
              ExceptionStackTrce:
                xml:
                  name: StackTrace
                  wrapped: true
                description: 'Stack trace following an exception message.'
                type: string
              ExceptionType:
                xml:
                  name: Type
                  wrapped: true
                description: 'The type of the Exception'
                type: string
# === Nexus ===
  Nexus:
    description: "Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for details."
    type: object
    properties:
      description:
        type: string
# === Optional Field ===
  OptionalField:
    description: Data structure used to provide optional alphanumeric data for transactions.
    required:
    - OptionalKeyNo
    - OptionalValue
    type: object
    properties:
      OptionalKeyNo:
        format: int32
        description: Key number (1 to 10) for optional field.
        type: integer
      OptionalValue:
        description: Optional field value.
        type: string
# === Optional Key Data ==
  OptionalKeyData:
    description: Data structure used to provide optional alphanumeric data for transactions.
    type: object
    xml:
      prefix: 'Request: ezt, Response: a'
    required:
      - OptionalKeyDesc
      - OptionalKeyNo
    properties:
      OptionalKeyDesc:
        description: Optional field value.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'
      OptionalKeyNo:
        format: int32
        description: Key number (1 to 10) for optional field.
        type: integer
        xml:
          prefix: 'Request: ezt, Response: a'
# === Override List ===
  OverrideList:
    xml:
      namespace: 'xmlns:ezt1="http://schemas.datacontract.org/2004/07/EZTaxWebService.WrapperClasses"'
      prefix: a
    required:
      - TaxRateOverrideInfo
    properties:
      TaxRateOverrideInfo:
        $ref: '#/definitions/TaxRateOverrideInfo'
  TaxRateOverrideInfo:
    xml:
      prefix: a
    required:
      - LevelExemptible
      - Pcode
      - Scope
      - BracketInfo
      - TaxLevel
      - TaxType
    properties:
      BracketInfo:
        description: Tax rate/bracket information.
        type: array
        items:
          $ref: '#/definitions/TaxBracket'
      LevelExemptible:
        description: Indicates if the tax can be exempted using level exemptions.
        type: boolean
        xml:
          prefix: a
      Pcode:
        format: int32
        description: Jurisdiction PCode for this tax rate override.
        type: integer
        xml:
          prefix: a
      Scope:
        format: int32
        description: Scope for override.
        type: integer
        xml:
          prefix: a
      TaxLevel:
        format: int32
        description: Tax level. "Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Tax Levels."
        type: integer
        xml:
          prefix: a
      TaxType:
        format: int32
        description: One of the Avalara tax types.
        type: integer
        xml:
          prefix: a
# == Tax Bracket Array of tax bracket information structures ==
  TaxBracket:
    description: Array of Tax Bracket Information structures.
    required:
      - TaxBracketInfo
    properties:
      TaxBracketInfo:
        $ref: '#/definitions/TaxBracketInfo'
# === Tax Bracket Information structure ===
  TaxBracketInfo:
    description: Tax Bracket Info
    required:
    - Rate
    - MaxBase
    type: object
    xml:
      prefix: a
    properties:
      CountyOverrideOn:
        description: For sales and use taxes only (tax types 1 and 49), indicates
          that this tax replaces the tax at the county level.
        type: boolean
        xml:
          prefix: a
      CountyOverrideTax:
        format: double
        description: For sales and use taxes only (tax types 1 and 49), overrides
          the rate for the tax at the county level.
        type: number
        xml:
          prefix: a
      MaxBase:
        format: double
        description: Maximum base that this rate applies to.
        type: number
        xml:
          prefix: a
      Rate:
        format: double
        description: Tax rate. Value cannot be negative. For rated taxes, value must
          be from 0 to 1. Otherwise, value may be larger.
        type: number
        xml:
          prefix: a
      StateOverrideOn:
        description: For sales and use taxes only (tax types 1 and 49) indicates that
          this tax replaces the tax at the state level.
        type: boolean
        xml:
          prefix: a
      StateOverrideTax:
        format: double
        description: For sales and use taxes only (tax types 1 and 49), overrides
          the rate for the tax at the state level.
        type: number
        xml:
          prefix: a
# === Tax Data ===
  TaxData:
    description: 'Zero or more array elements containing tax data.'
    type: object
    xml:
      prefix: a
    properties:
      AdjustmentType:
        type: integer
        format: int32
        description: "0 if not an adjustment, otherwise one of the DiscountType enums based on user input. Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of Discount Types."
        xml:
          prefix: &TaxDataPrefix a
      Billable:
        type: boolean
        description: Indicates if the tax is billable to the customer.
        xml:
          prefix: *TaxDataPrefix
      CalculationType:
        type: integer
        format: int32
        description: Calculation type. Please see CalculationType in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list.
        xml:
          prefix: *TaxDataPrefix
      CategoryDescription:
        type: string
        description: Tax Category Description.
        xml:
          prefix: *TaxDataPrefix
      CategoryID:
        type: integer
        format: int32
        description: Tax category ID.
        xml:
          prefix: *TaxDataPrefix
      CompanyIdentifier:
        type: string
        description: Customer identifier from transaction input.
        xml:
          prefix: *TaxDataPrefix
      Compliance:
        type: boolean
        description: Indicates if the tax is reportable to the jurisdiction.
      CustomerNumber:
        type: string
        description: User-defined customer number.
        xml:
          prefix: *TaxDataPrefix
      Description:
        type: string
        description: Tax description.
        xml:
          prefix: *TaxDataPrefix
      ExemptSaleAmount:
        type: number
        format: double
        description: Amount of the charge exempt from taxes.
        xml:
          prefix: *TaxDataPrefix
      ExemptionType:
        type: integer
        format: int32
        description: "Set to 0 - reserved for future use. See ExemptionType under TaxData in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf'."
        xml:
          prefix: *TaxDataPrefix
      InvoiceNumber:
        type: integer
        format: int32
        description: User-defined invoice number.
        xml:
          prefix: *TaxDataPrefix
      Lines:
        type: integer
        format: int32
        description: Number of lines used to calculate the tax (for per-line tax calculations).
        xml:
          prefix: *TaxDataPrefix
      Locations:
        type: integer
        format: int32
        description: "Number of locations from transaction input."
        xml:
          prefix: *TaxDataPrefix
      Minutes:
        type: number
        format: double
        description: Number of minutes used to calculate the tax (for per-minute tax
          calculations).
        xml:
          prefix: *TaxDataPrefix
      Optional:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional10:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional4:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional5:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional6:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional7:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional8:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      Optional9:
        type: integer
        format: int32
        description: Optional user-defined value.
        xml:
          prefix: *TaxDataPrefix
      OptionalAlpha1:
        description: Optional user-defined string value.
        type: string
        xml:
          prefix: *TaxDataPrefix
      OptionalFields:
        description: User-defined list of optional alphanumeric fields.
        type: array
        items:
          "$ref": "#/definitions/OptionalField"
        xml:
          prefix: *TaxDataPrefix
      PCode:
        type: integer
        format: int32
        description: PCode for the reporting jurisdiction.
        xml:
          prefix: *TaxDataPrefix
      Rate:
        type: number
        format: double
        description: Tax rate.
        xml:
          prefix: *TaxDataPrefix
      RefundUncollect:
        type: number
        format: double
        description: Taxable measure if tax is smaller than 0 (tax adjustments).
        xml:
          prefix: *TaxDataPrefix
      ServiceLevelNumber:
        type: integer
        format: int32
        description: User-defined service level number.
        xml:
          prefix: *TaxDataPrefix
      Surcharge:
        type: boolean
        description: Indicates if tax is considered a surcharge.
        xml:
          prefix: *TaxDataPrefix
      TaxAmount:
        type: number
        format: double
        description: Calculated tax amount.
        xml:
          prefix: *TaxDataPrefix
      TaxLevel:
        type: integer
        format: int32
        description: Tax level. "Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Tax Levels."
        xml:
          prefix: *TaxDataPrefix
      TaxType:
        type: integer
        format: int32
        description: One of the Avalara tax types.
        xml:
          prefix: *TaxDataPrefix
      TaxableMeasure:
        type: number
        format: double
        description: Amount of sale subject to tax plus any taxed taxes.
# === Tax Exemptin ===
  TaxExemption:
    description: Tax Exemption class
    required:
    - PCode
    - TaxLevel
    - TaxType
    type: object
    properties:
      PCode:
        format: int32
        description: PCode for jurisdiction to exempt.
        type: integer
      TaxLevel:
        format: int32
        description: Tax level. "Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Tax Levels."
        type: integer
      TaxType:
        format: int32
        description: One of the Avalara tax types.
        type: integer
# === Tax Rate Informatin ===
  TaxRateInfo:
    description: Tax Rate Info Class
    required:
    - RateHistory
    - TaxLevel
    - TaxType
    type: object
    xml:
      prefix: a
    properties:
      RateHistory:
        description: Tax rate history.
        type: array
        xml:
          prefix: a
        items:
          "$ref": "#/definitions/TaxRateHistory"
      TaxLevel:
        description: Tax level. "Please see 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Tax Levels."
        type: integer
        format: int32
        xml:
          prefix: a
      TaxType:
        description: One of the Avalara tax types.
        type: integer
        format: int32
        xml:
          prefix: a
  TaxRateHistory:
    description: Tax Rate History Class
    required:
    - BracketInfo
    - EffectiveDate
    type: object
    xml:
      prefix: a
    properties:
      BracketInfo:
        description: Tax rate/bracket information.
        type: array
        xml:
          prefix: a
        items:
          "$ref": "#/definitions/TaxBracketInfo"
      EffectiveDate:
        description: Effective date for rate.
        type: string
        format: date-time
        xml:
          prefix: a
      LevelExemptible:
        description: Indicates if the tax can be exempted using level exemptions.
        type: boolean
        xml:
          prefix: a
# === Transaction ===
  Transaction:
    description: "Note: Only select one from each of the BillTo, Origination and Termination options."
    xml:
      namespace: ' xmlns:ezt="http://schemas.datacontract.org/2004/07/EZTaxWebService" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"'
      prefix: tem
    required:
      - BillToAddress
      - BillToFipsCode
      - BillToPCode
      - BillToNpaNxx
      - BusinessClass
      - Charge
      - CustomerType
      - Date
      - OriginationAddress
      - OriginationFipsCode
      - OriginationPCode
      - OriginationNpaNxx
      - Sale
      - ServiceClass
      - ServiceType
      - TerminationAddress
      - TerminationFipsCode
      - TerminationPCode
      - TerminationNpaNxx
      - TransactionType
    properties:
      AdjustmentMethod:
        format: int32
        description: Adjustment Method. "Please see AdjustmentMethod in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Adjustment Methods."
        type: integer
        xml:
          prefix: ezt
      BillToAddress:
        $ref: "#/definitions/ZipAddress"
      BillToFipsCode:
        description: Bill-to FIPS code. Select only one BillToxxx option.
        type: string
        xml:
          prefix: ezt
      BillToPCode:
        format: int32
        description: Bill-to PCode. Select only one BillToxxx option.
        type: integer
        xml:
          prefix: ezt
      BillToNpaNxx:
        format: int32
        description: Bill-to NPANXX. Select only one BillToxxx option.
        type: integer
      BusinessClass:
        format: int32
        description: "Business class. Please see BusinessClass in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Business Classes."
        type: integer
        xml:
          prefix: ezt
      CategoryExemptions:
        description: List of tax category exemptions.
        type: array
        items:
          $ref: "#/definitions/CategoryExemption"
        xml:
          prefix: ezt
      Charge:
        format: double
        description: Charge amount to customer for transaction
        type: number
        xml:
          prefix: ezt
      CompanyIdentifier:
        description: "Company identifier. Use the 3-character company identifier provided
          by Avalara to your organization in order to include this
          transaction in the monthly compliance reports. Otherwise, leave empty."
        type: string
      CountyExempt:
        description: True if transaction is exempt from County Tax, otherwise false.
        type: boolean
        xml:
          prefix: ezt
      CountyPCode:
        format: int32
        description: Jurisdiction for county exemption.
        type: integer
        xml:
          prefix: ezt
      CustomerNumber:
        description: User-defined customer number.
        type: string
        xml:
          prefix: ezt
      CustomerType:
        format: int32
        description: "Customer type. Please see CustomerType in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Customer Types."
        type: integer
        xml:
          prefix: ezt
      Date:
        format: date-time
        description: Transaction date.  Field is provided to allow rating and taxing to occur on a date other than the billing date.
        type: string
        xml:
          prefix: ezt
      Debit:
        description: Determines if this is a prepaid debit card transaction.
        type: boolean
        xml:
          prefix: ezt
      DiscountType:
        format: int32
        description: "Discount type. Please see DiscountType in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Discount Types."
        type: integer
        xml:
          prefix: ezt
      Exemptions:
        description: List of tax exemptions.
        type: array
        items:
          $ref: "#/definitions/TaxExemption"
        xml:
          prefix: ezt
      ExemptionType:
        format: int32
        description: "Set to 0 - reserved for future use. See ExemptionType under TaxData in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf'."
        type: integer
        xml:
          prefix: ezt
      FacilitiesBased:
        description: Specifies if the carrier delivering the service has company owned facilities to provide the service.
        type: boolean
        xml:
          prefix: ezt
      FederalExempt:
        description: True if transaction is exempt from Federal Tax, otherwise false.
        type: boolean
        xml:
          prefix: ezt
      FederalPCode:
        format: int32
        description: Jurisdiction for Federal exemption.
        type: integer
        xml:
          prefix: ezt
      Franchise:
        description: Indicates if the company provides services sold pursuant to a
          franchise agreement between the carrier and jurisdiction.
        type: boolean
        xml:
          prefix: ezt
      Incorporated:
        description: True if this transaction is within an incorporated area of the local jurisdiction, otherwise False.
        type: boolean
        xml:
          prefix: ezt
      InvoiceNumber:
        format: int32
        description: User-defined invoice number.
        type: integer
        xml:
          prefix: ezt
      IsPrivateLine:
        description: Indicates if the transaction is a private line transaction.
        type: boolean
        xml:
          prefix: ezt
      Lines:
        format: int32
        description: Number of lines sold to customer when applicable.
        type: integer
        xml:
          prefix: ezt
      LocalExempt:
        description: True if transaction is exempt from Local Tax, otherwise false.
        type: boolean
        xml:
          prefix: ezt
      LocalPCode:
        format: int32
        description: Jurisdiction for local exemption.
        type: integer
      Locations:
        format: int32
        description: Number of customer locations.
        type: integer
        xml:
          prefix: ezt
      Minutes:
        format: double
        description: Number of minutes for call when appropriate.
        type: number
        xml:
          prefix: ezt
      Optional:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional10:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional4:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional5:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional6:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional7:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional8:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      Optional9:
        format: int32
        description: Optional user-defined value.
        type: integer
        xml:
          prefix: ezt
      OptionalAlpha1:
        description: Optional user-defined string value. 20-characters max.
        type: string
        xml:
          prefix: ezt
      OptionalFields:
        description: User-defined list of optional alphanumeric fields.
        type: array
        items:
          $ref: "#/definitions/OptionalField"
        xml:
          prefix: ezt
      OriginationAddress:
        $ref: "#/definitions/ZipAddress"
      OriginationFipsCode:
        description: Origination FIPS code. Select only one Origination option.
        type: string
        xml:
          prefix: ezt
      OriginationPCode:
        format: int32
        description: Origination PCode. Select only one Origination option.
        type: integer
        xml:
          prefix: ezt
      OriginationNpaNxx:
        format: int32
        description: Origination NPANXX. Select only one Origination option.
        type: integer
      PrivateLineSplit:
        format: double
        description: "For private line transactions, this is the split between the ending points of a private line. The value indicates how much the portion of the charge belongs to the origin user."
        type: number
        xml:
          prefix: ezt
      Regulated:
        description: True if regulated, otherwise false.
        type: boolean
        xml:
          prefix: ezt
      Sale:
        description: Indicates if this is a retail sale. Use false for resale/wholesale transactions.
        type: boolean
        xml:
          prefix: ezt
      ServiceClass:
        format: int32
        description: "Service class. Please see ServiceClass in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for a list of valid Service Classes."
        type: integer
        xml:
          prefix: ezt
      ServiceLevelNumber:
        format: int32
        description: User-defined service level number.
        type: integer
        xml:
          prefix: ezt
      ServiceType:
        format: int32
        description: Service type.
        type: integer
        xml:
          prefix: ezt
      StateExempt:
        description: True if transaction is exempt from State Tax, otherwise false.
        type: boolean
        xml:
          prefix: ezt
      StatePCode:
        format: int32
        description: Jurisdiction for state exemption.
        type: integer
        xml:
          prefix: ezt
      TerminationAddress:
        $ref: "#/definitions/ZipAddress"
      TerminationFipsCode:
        description: Termination FIPS code. Select only one Termination option.
        type: string
        xml:
          prefix: ezt
      TerminationPCode:
        format: int32
        description: Termination PCode. Select only one Termination option.
        type: integer
        xml:
          prefix: ezt
      TerminationNpaNxx:
        format: int32
        description: Termination NPANXX. Select only one Termination option.
        type: integer
      TransactionType:
        format: int32
        description: Transaction type.
        type: integer
        xml:
          prefix: ezt
# === ZipAddress ===
  ZipAddress:
    description: Zip Address Class. Select only one BillToxxx option.
    required:
    - CountryISO
    type: object
    properties:
      CountryISO:
        description: Three-character country ISO code.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'
      County:
        description: County name.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'
      Locality:
        description: Locality name.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'
      State:
        description: Two-character state abbreviation.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'
      ZipCode:
        description: Zip code for location.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'
      ZipP4:
        description: Zip + 4 for location.
        type: string
        xml:
          prefix: 'Request: ezt, Response: a'

# =====================================
# === Begin Customer Batch Envelope ===
  BeginCustomerBatchEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: &namespace_value 'xmlns:s="http://schemas.xmlsoap.org/soap/envelope/" xmlns:tem="http://tempuri.org/"'
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/BeginCustomerBatchBody'
  BeginCustomerBatchBody:
    description: 'Container for the request payload.'
    required:
      - BeginCustomerBatch
    properties:
      BeginCustomerBatch:
        $ref: '#/definitions/BeginCustomerBatchObject'
    xml:
      name: Body
      prefix: 's'
  BeginCustomerBatchObject:
    description: 'The object used for starting a batch calculation.'
    required:
      - transaction
    properties:
      transaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: BeginCustomerBatch
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  BeginCustomerBatchRespEnvelope:
    description: "Flags the beginning of a customer transaction batch and returns\
           \ a customer batch ID that can be used to submit each transaction\
           \ and process the entire batch."
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          BeginCustomerBatchResponse:
            type: object
            title: BeginCustomerBatchResponse
            xml:
              name: BeginCustomerBatchResponse
              namespace: 'http://tempuri.org/'
            properties:
              BeginCustomerBatchResult:
                type: number
                format: integer
                example: 49112
                description: 'Batch ID for transaction submission and batch processing.'
                title: BeginCustomerBatchResult
                xml:
                  name: BeginCustomerBatchResult

# ===================================
# === CalcAdjWithFipsCodeEnvelope ===
  CalcAdjWithFipsCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcAdjWithFipsCodeBody'
  CalcAdjWithFipsCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcAdjWithFipsCode
    properties:
      CalcAdjWithFipsCode:
        $ref: '#/definitions/CalcAdjWithFipsCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcAdjWithFipsCodeObject:
    description: 'The object used for calculating adjustments using a FIPS code.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcAdjWithFipsCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcAdjWithFipsCodeRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcAdjWithFipsCodeResponse:
            type: object
            title: CalcAdjWithFipsCodeResponse
            xml:
              name: CalcAdjWithFipsCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcAdjWithFipsCodeResult:
                type: object
                title: CalcAdjWithFipsCodeResult
                xml:
                  name: CalcAdjWithFipsCodeResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# =====================================
# === Calc Adj With NpaNxx Envelope ===
  CalcAdjWithNpaNxxEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcAdjWithNpaNxxBody'
  CalcAdjWithNpaNxxBody:
    description: 'Container for the request payload.'
    required:
      - CalcAdjWithNpaNxx
    properties:
      CalcAdjWithNpaNxx:
        $ref: '#/definitions/CalcAdjWithNpaNxxObject'
    xml:
      name: Body
      prefix: 's'
  CalcAdjWithNpaNxxObject:
    description: 'The object used for calculating adjustments with NpaNxx.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcAdjWithNpaNxx
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcAdjWithNpaNxxRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcAdjWithNpaNxxResponse:
            type: object
            title: CalcAdjWithNpaNxxResponse
            xml:
              name: CalcAdjWithNpaNxxResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcAdjWithNpaNxxResult:
                type: object
                title: CalcAdjWithNpaNxxResult
                xml:
                  name: CalcAdjWithNpaNxxResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ====================================
# === CalcAdjWithOverridesEnvelope ===
  CalcAdjWithOverridesEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcAdjWithOverridesBody'
  CalcAdjWithOverridesBody:
    description: 'Container for the request payload.'
    required:
      - CalcAdjWithOverrides
    properties:
      CalcAdjWithOverrides:
        $ref: '#/definitions/CalcAdjWithOverridesObject'
    xml:
      name: Body
      prefix: 's'
  CalcAdjWithOverridesObject:
    description: 'The object used for calculating taxes using a overrides.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
      overrideList:
        $ref: '#/definitions/OverrideList'
    xml:
      name: CalcAdjWithOverrides
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcAdjWithOverridesRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcAdjWithOverridesResponse:
            type: object
            title: CalcAdjWithOverridesResponse
            xml:
              name: CalcAdjWithOverridesResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcAdjWithOverridesResult:
                type: object
                title: CalcAdjWithOverridesResult
                xml:
                  name: CalcAdjWithOverridesResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ================================
# === CalcAdjWithPCodeEnvelope ===
  CalcAdjWithPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcAdjWithPCodeBody'
  CalcAdjWithPCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcAdjWithPCode
    properties:
      CalcAdjWithPCode:
        $ref: '#/definitions/CalcAdjWithPCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcAdjWithPCodeObject:
    description: 'The object used for calculating adjustments using a FIPS code.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcAdjWithPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcAdjWithPCodeRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcAdjWithPCodeResponse:
            type: object
            title: CalcAdjWithPCodeResponse
            xml:
              name: CalcAdjWithPCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcAdjWithPCodeResult:
                type: object
                title: CalcAdjWithPCodeResult
                xml:
                  name: CalcAdjWithPCodeResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# =====================================
# === CalcAdjWithZipAddressEnvelope ===
  CalcAdjWithZipAddressEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcAdjWithZipAddressBody'
  CalcAdjWithZipAddressBody:
    description: 'Container for the request payload.'
    required:
      - CalcAdjWithZipAddress
    properties:
      CalcAdjWithZipAddress:
        $ref: '#/definitions/CalcAdjWithZipAddressObject'
    xml:
      name: Body
      prefix: 's'
  CalcAdjWithZipAddressObject:
    description: 'The object used for calculating taxes using a zip address.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcAdjWithZipAddress
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcAdjWithZipAddressRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcAdjWithZipAddressResponse:
            type: object
            title: CalcAdjWithZipAddressResponse
            xml:
              name: CalcAdjWithZipAddressResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcAdjWithZipAddressResult:
                type: object
                title: CalcAdjWithZipAddressResult
                xml:
                  name: CalcAdjWithZipAddressResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ==============================
# === Calc Cust Adj Envelope ===
  CalcCustAdjEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcCustAdjBody'
  CalcCustAdjBody:
    description: 'Container for the request payload.'
    required:
      - CalcCustAdj
    properties:
      CalcCustAdj:
        $ref: '#/definitions/CalcCustAdjObject'
    xml:
      name: Body
      prefix: 's'
  CalcCustAdjObject:
    description: 'The object used for calculating a single batch transaction.'
    required:
      - custBatchId
      - adjustment
    properties:
      custBatchId:
        $ref: '#/definitions/custBatchId'
      adjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcCustAdj
      prefix: tem
      namespace: 'http://tempuri.org/'


#------------
  CalcCustAdjRespEnvelope:
    description: 'Retruns a boolean value indicating success (true) or failure (false).'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcCustAdjResponse:
            type: object
            title: CalcCustAdjResponse
            xml:
              name: CalcCustAdjResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcCustAdjResult:
                type: boolean
                title: CalcCustAdjResult
                example: true
                description: Boolean indicating success (true) or failure (false).
                xml:
                  name: CalcCustAdjResult

# ====================
# === CalcCustTaxesEnvelope ===
  CalcCustTaxesEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcCustTaxesBody'
  CalcCustTaxesBody:
    description: 'Container for the request payload.'
    required:
      - CalcCustTaxes
    properties:
      CalcCustTaxes:
        $ref: '#/definitions/CalcCustTaxesObject'
    xml:
      name: Body
      prefix: 's'
  CalcCustTaxesObject:
    description: 'The object used for calculating a single batch transaction.'
    required:
      - custBatchId
      - transaction
    properties:
      custBatchId:
        $ref: '#/definitions/custBatchId'
      transaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcCustTaxes
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcCustTaxesRespEnvelope:
    description: 'Retruns a boolean value indicating success (true) or failure (false).'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcCustTaxesResponse:
            type: object
            title: CalcCustTaxesResponse
            xml:
              name: CalcCustTaxesResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcCustTaxesResult:
                type: boolean
                title: CalcCustTaxesResult
                example: true
                description: Boolean indicating success (true) or failure(false).
                xml:
                  name: CalcCustTaxesResult

# ==============================
# === Calc Jurisdiction Envelope
  CalcJurisdictionEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcJurisdictionBody'
  CalcJurisdictionBody:
    description: 'Container for the request payload.'
    required:
      - CalcJurisdiction
    properties:
      CalcJurisdiction:
        $ref: '#/definitions/CalcJurisdictionObject'
    xml:
      name: Body
      prefix: 's'
  CalcJurisdictionObject:
    description: 'The object used for determining jurisdiction.'
    required:
      - transaction
    properties:
      transaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcJurisdiction
      prefix: tem
      namespace: 'http://tempuri.org/ '
#------------
  CalcJurisdictionRespEnvelope:
    description: 'Returns the PCode at the lowest taxing jurisdiction.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcJurisdictionResponse:
            type: object
            title: CalcJurisdictionResponse
            xml:
              name: CalcJurisdictionResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcJurisdictionResult:
                type: object
                title: CalcJurisdictionResult
                xml:
                  name: CalcJurisdictionResult
                properties:
                  myValue:
                    type: number
                    format: uint
                    example: 1248900
                    description: 'PCode for taxing jurisdiction.'

# =================================
# === Calc Pro-Rated Adj Envelope
  CalcProRatedAdjEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcProRatedAdjBody'
  CalcProRatedAdjBody:
    description: 'Container for the request payload.'
    required:
      - CalcProRatedAdj
    properties:
      CalcProRatedAdj:
        $ref: '#/definitions/CalcProRatedAdjObject'
    xml:
      name: Body
      prefix: 's'
  CalcProRatedAdjObject:
    description: 'The object used for calculating prorated adjustment.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
      percent:
        format: double
        description: Pro-rated percent specified as a decimal.
        type: number
        xml:
          prefix: tem
    xml:
      name: CalcProRatedAdj
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcProRatedAdjRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcProRatedAdjResponse:
            type: object
            title: CalcProRatedAdjResponse
            xml:
              name: CalcProRatedAdjResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcProRatedAdjResult:
                type: object
                title: CalcProRatedAdjResult
                xml:
                  name: CalcProRatedAdjResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# =================================
# === Calc Pro-Rated Taxes Envelope
  CalcProRatedTaxesEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcProRatedTaxesBody'
  CalcProRatedTaxesBody:
    description: 'Container for the request payload.'
    required:
      - CalcProRatedTaxes
    properties:
      CalcProRatedTaxes:
        $ref: '#/definitions/CalcProRatedTaxesObject'
    xml:
      name: Body
      prefix: 's'
  CalcProRatedTaxesObject:
    description: 'The object used for calculating prorated taxes.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
      percent:
        format: double
        description: Pro-rated percent specified as a decimal.
        type: number
        xml:
          prefix: tem
    xml:
      name: CalcProRatedTaxes
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcProRatedTaxesRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcProRatedTaxesResponse:
            type: object
            title: CalcProRatedTaxesResponse
            xml:
              name: CalcProRatedTaxesResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcProRatedTaxesResult:
                type: object
                title: CalcProRatedTaxesResult
                xml:
                  name: CalcProRatedTaxesResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ============================================
# === Calc Reverse Adj With FIPS Code Envelope
  CalcReverseAdjWithFipsCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseAdjWithFipsCodeBody'
  CalcReverseAdjWithFipsCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseAdjWithFipsCode
    properties:
      CalcReverseAdjWithFipsCode:
        $ref: '#/definitions/CalcReverseAdjWithFipsCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseAdjWithFipsCodeObject:
    description: 'The object used for calculating reverse taxes using a FIPS code.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseAdjWithFipsCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseAdjWithFipsCodeRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseAdjWithFipsCodeResponse:
            type: object
            title: CalcReverseAdjWithFipsCodeResponse
            xml:
              name: CalcReverseAdjWithFipsCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseAdjWithFipsCodeResult:
                type: object
                title: CalcReverseAdjWithFipsCodeResult
                xml:
                  name: CalcReverseAdjWithFipsCodeResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'
# ====================
# === CalcReverseAdjWithNpaNxxEnvelope ===
  CalcReverseAdjWithNpaNxxEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseAdjWithNpaNxxBody'
  CalcReverseAdjWithNpaNxxBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseAdjWithNpaNxx
    properties:
      CalcReverseAdjWithNpaNxx:
        $ref: '#/definitions/CalcReverseAdjWithNpaNxxObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseAdjWithNpaNxxObject:
    description: 'The object used for calculating reverse taxes using an NpaNxx value.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseAdjWithNpaNxx
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseAdjWithNpaNxxRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseAdjWithNpaNxxResponse:
            type: object
            title: CalcReverseAdjWithNpaNxxResponse
            xml:
              name: CalcReverseAdjWithNpaNxxResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseAdjWithNpaNxxResult:
                type: object
                title: CalcReverseAdjWithNpaNxxResult
                xml:
                  name: CalcReverseAdjWithNpaNxxResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ====================
# === CalcReverseAdjWithPCodeEnvelope ===
  CalcReverseAdjWithPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseAdjWithPCodeBody'
  CalcReverseAdjWithPCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseAdjWithPCode
    properties:
      CalcReverseAdjWithPCode:
        $ref: '#/definitions/CalcReverseAdjWithPCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseAdjWithPCodeObject:
    description: 'The object used for calculating reverse taxes using a PCode.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseAdjWithPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseAdjWithPCodeRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseAdjWithPCodeResponse:
            type: object
            title: CalcReverseAdjWithPCodeResponse
            xml:
              name: CalcReverseAdjWithPCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseAdjWithPCodeResult:
                type: object
                title: CalcReverseAdjWithPCodeResult
                xml:
                  name: CalcReverseAdjWithPCodeResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ====================
# === CalcReverseAdjWithZipCodeEnvelope ===
  CalcReverseAdjWithZipCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseAdjWithZipCodeBody'
  CalcReverseAdjWithZipCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseAdjWithZipCode
    properties:
      CalcReverseAdjWithZipCode:
        $ref: '#/definitions/CalcReverseAdjWithZipCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseAdjWithZipCodeObject:
    description: 'The object used for calculating reverse taxes using a zip code.'
    required:
      - anAdjustment
    properties:
      anAdjustment:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseAdjWithPCode
      prefix: tem
      namespace: 'http://tempuri.org/'

#------------
  CalcReverseAdjWithZipCodeRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseAdjWithZipCodeResponse:
            type: object
            title: CalcReverseAdjWithZipCodeResponse
            xml:
              name: CalcReverseAdjWithZipCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseAdjWithZipCodeResult:
                type: object
                title: CalcReverseAdjWithZipCodeResult
                xml:
                  name: CalcReverseAdjWithZipCodeResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ====================
# === CalcReverseTaxesWithFipsCodeEnvelope ===
  CalcReverseTaxesWithFipsCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseTaxesWithFipsCodeBody'
  CalcReverseTaxesWithFipsCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseTaxesWithFipsCode
    properties:
      CalcReverseTaxesWithFipsCode:
        $ref: '#/definitions/CalcReverseTaxesWithFipsCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseTaxesWithFipsCodeObject:
    description: 'The object used for calculating reverse taxes using a FIPS code.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseTaxesWithFipsCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseTaxesWithFipsCodeRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseTaxesWithFipsCodeResponse:
            type: object
            title: CalcReverseTaxesWithFipsCodeResponse
            xml:
              name: CalcReverseTaxesWithFipsCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseTaxesWithFipsCodeResult:
                type: object
                title: CalcReverseTaxesWithFipsCodeResult
                xml:
                  name: CalcReverseTaxesWithFipsCodeResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ====================
# === CalcReverseTaxesWithNpaNxxEnvelope ===
  CalcReverseTaxesWithNpaNxxEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseTaxesWithNpaNxxBody'
  CalcReverseTaxesWithNpaNxxBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseTaxesWithNpaNxx
    properties:
      CalcReverseTaxesWithNpaNxx:
        $ref: '#/definitions/CalcReverseTaxesWithNpaNxxObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseTaxesWithNpaNxxObject:
    description: 'The object used for calculating reverse taxes using an NpaNxx.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseTaxesWithNpaNxx
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseTaxesWithNpaNxxRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseTaxesWithNpaNxxResponse:
            type: object
            title: CalcReverseTaxesWithNpaNxxResponse
            xml:
              name: CalcReverseTaxesWithNpaNxxResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseTaxesWithNpaNxxResult:
                type: object
                title: CalcReverseTaxesWithNpaNxxResult
                xml:
                  name: CalcReverseTaxesWithNpaNxxResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ====================
# === CalcReverseTaxesWithPCodeEnvelope ===
  CalcReverseTaxesWithPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseTaxesWithPCodeBody'
  CalcReverseTaxesWithPCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseTaxesWithPCode
    properties:
      CalcReverseTaxesWithPCode:
        $ref: '#/definitions/CalcReverseTaxesWithPCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseTaxesWithPCodeObject:
    description: 'The object used for calculating reverse taxes using a PCode.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseTaxesWithPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseTaxesWithPCodeRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseTaxesWithPCodeResponse:
            type: object
            title: CalcReverseTaxesWithPCodeResponse
            xml:
              name: CalcReverseTaxesWithPCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseTaxesWithPCodeResult:
                type: object
                title: CalcReverseTaxesWithPCodeResult
                xml:
                  name: CalcReverseTaxesWithPCodeResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ====================
# === CalcReverseTaxesWithZipAddressEnvelope ===
  CalcReverseTaxesWithZipAddressEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcReverseTaxesWithZipAddressBody'
  CalcReverseTaxesWithZipAddressBody:
    description: 'Container for the request payload.'
    required:
      - CalcReverseTaxesWithZipAddress
    properties:
      CalcReverseTaxesWithZipAddress:
        $ref: '#/definitions/CalcReverseTaxesWithZipAddressObject'
    xml:
      name: Body
      prefix: 's'
  CalcReverseTaxesWithZipAddressObject:
    description: 'The object used for calculating reverse taxes using a Zip Address.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcReverseTaxesWithZipAddress
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcReverseTaxesWithZipAddressRespEnvelope:
    description: 'Returns the calculated base sale amount for the transaction and an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcReverseTaxesWithZipAddressResponse:
            type: object
            title: CalcReverseTaxesWithZipAddressResponse
            xml:
              name: CalcReverseTaxesWithZipAddressResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcReverseTaxesWithZipAddressResult:
                type: object
                title: CalcReverseTaxesWithZipAddressResult
                xml:
                  name: CalcReverseTaxesWithZipAddressResult
                properties:
                  BaseSaleAmount:
                    type: number
                    format: double
                    example: 85.95907
                    description: 'The calculated base sale amount for the transaction.'
                  Taxes:
                    type: object
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array of TaxData objects containing the returned tax data.'

# ========================================
# === Calc Taxes In Cust Mode Envelope ===
  CalcTaxesInCustModeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcTaxesInCustModeBody'
  CalcTaxesInCustModeBody:
    description: 'Container for the request payload.'
    required:
      - CalcTaxesInCustMode
    properties:
      CalcTaxesInCustMode:
        $ref: '#/definitions/CalcTaxesInCustModeObject'
    xml:
      name: Body
      prefix: 's'
  CalcTaxesInCustModeObject:
    description: 'The object used for calculating taxes in customer mode.'
#    required:
#      - aTransaction
#      - overrideList
    properties:
      transactions:
        $ref: '#/definitions/Transaction'
      adjustments:
        $ref: '#/definitions/Transaction'
      sauTransactions:
        description: "Please see 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for details."
        type: object
        properties: {}
      sauAdjustments:
        description: "Please see 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for details."
        type: object
        properties: {}
      nexus:
        type: object
        xml:
          name: nexus
          prefix: tem
        description: An array of zero or more nexus entries.
        properties:
          Nexus:
            type: array
            items:
              $ref: '#/definitions/Nexus'
      exclusions:
        type: object
        xml:
          name: exclusions
          prefix: tem
        description: An array of zero or more exclusions.
        properties:
          Exclusion:
            type: array
            items:
              $ref: '#/definitions/Exclusion'
    xml:
      name: CalcTaxesInCustMode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcTaxesInCustModeRespEnvelope:
    description: 'Data structure containing an array of TaxData objects for each individual transaction processed and CustomerTaxData array containing the summarized taxes for the customer batch.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcTaxesInCustModeResponse:
            type: object
            title: CalcTaxesInCustModeResponse
            xml:
              name: CalcTaxesInCustModeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcTaxesInCustModeResult:
                type: object
                title: CalcTaxesInCustModeResult
                xml:
                  name: CalcTaxesInCustModeResult
                  namespace: 'xmlns:a="http://schemas.datacontract.org/2004/07/EZTaxWebService" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"'
                properties:
                  SummarizedTaxes:
                    type: object
                    title: SummarizedTaxes
                    xml:
                      name: SummarizedTaxes
                    properties:
                      CustomerTaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/CustomerTaxData"
                        description: 'CustomerTaxData array containing zero or more summarized taxes for the customer batch.'
                  Taxes:
                    type: object
                    title: Taxes
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array containing zero or more TaxData objects for each individual transaction processed.'

# ======================================
# === Calc Taxes With Fips Code Envelope ===
  CalcTaxesWithFipsCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcTaxesWithFipsCodeBody'
  CalcTaxesWithFipsCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcTaxesWithFipsCode
    properties:
      CalcTaxesWithFipsCode:
        $ref: '#/definitions/CalcTaxesWithFipsCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcTaxesWithFipsCodeObject:
    description: 'The object used for calculating taxes with FIPS Codes.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcTaxesWithFipsCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcTaxesWithFipsCodeRespEnvelope:
    description: 'Transaction data for performing tax calculations.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcTaxesWithFipsCodeResponse:
            type: object
            title: CalcTaxesWithFipsCodeResponse
            xml:
              name: CalcTaxesWithFipsCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcTaxesWithFipsCodeResult:
                type: object
                title: CalcTaxesWithFipsCodeResult
                xml:
                  name: CalcTaxesWithFipsCodeResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ======================================
# === Calc Taxes With NpaNxx Envelope ===
  CalcTaxesWithNpaNxxEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcTaxesWithNpaNxxBody'
  CalcTaxesWithNpaNxxBody:
    description: 'Container for the request payload.'
    required:
      - CalcTaxesWithNpaNxx
    properties:
      CalcTaxesWithNpaNxx:
        $ref: '#/definitions/CalcTaxesWithNpaNxxObject'
    xml:
      name: Body
      prefix: 's'
  CalcTaxesWithNpaNxxObject:
    description: 'The object used for calculating taxes with NpaNxx.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcTaxesWithNpaNxx
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcTaxesWithNpaNxxRespEnvelope:
    description: 'Transaction data for performing tax calculations.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcTaxesWithNpaNxxResponse:
            type: object
            title: CalcTaxesWithNpaNxxResponse
            xml:
              name: CalcTaxesWithNpaNxxResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcTaxesWithNpaNxxResult:
                type: object
                title: CalcTaxesWithNpaNxxResult
                xml:
                  name: CalcTaxesWithNpaNxxResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ==========================================
# === Calc Taxes With Overrides Envelope ===
  CalcTaxesWithOverridesEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcTaxesWithOverridesBody'
  CalcTaxesWithOverridesBody:
    description: 'Container for the request payload.'
    required:
      - CalcTaxesWithOverrides
    properties:
      CalcTaxesWithOverrides:
        $ref: '#/definitions/CalcTaxesWithOverridesObject'
    xml:
      name: Body
      prefix: 's'
  CalcTaxesWithOverridesObject:
    description: 'The object used for calculating taxes with overrides.'
    required:
      - aTransaction
      - overrideList
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
      overrideList:
        $ref: '#/definitions/OverrideList'
    xml:
      name: CalcTaxesWithOverrides
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcTaxesWithOverridesRespEnvelope:
    description: 'Returns an array of TaxData objects that contain the information about the taxes applied.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcTaxesWithOverridesResponse:
            type: object
            title: CalcTaxesWithOverridesResponse
            xml:
              name: CalcTaxesWithOverridesResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcTaxesWithOverridesResult:
                type: object
                title: CalcTaxesWithOverridesResult
                xml:
                  name: CalcTaxesWithOverridesResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ======================================
# === Calc Taxes With PCode Envelope ===
  CalcTaxesWithPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcTaxesWithPCodeBody'
  CalcTaxesWithPCodeBody:
    description: 'Container for the request payload.'
    required:
      - CalcTaxesWithPCode
    properties:
      CalcTaxesWithPCode:
        $ref: '#/definitions/CalcTaxesWithPCodeObject'
    xml:
      name: Body
      prefix: 's'
  CalcTaxesWithPCodeObject:
    description: 'The object used for calculating taxes with PCode.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcTaxesWithPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcTaxesWithPCodeRespEnvelope:
    description: 'Transaction data for performing tax calculations.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcTaxesWithPCodeResponse:
            type: object
            title: CalcTaxesWithPCodeResponse
            xml:
              name: CalcTaxesWithPCodeResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcTaxesWithPCodeResult:
                type: object
                title: CalcTaxesWithPCodeResult
                xml:
                  name: CalcTaxesWithPCodeResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ======================================
# === Calc Taxes With Zip Address Envelope ===
  CalcTaxesWithZipAddressEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CalcTaxesWithZipAddressBody'
  CalcTaxesWithZipAddressBody:
    description: 'Container for the request payload.'
    required:
      - CalcTaxesWithZipAddress
    properties:
      CalcTaxesWithZipAddress:
        $ref: '#/definitions/CalcTaxesWithZipAddressObject'
    xml:
      name: Body
      prefix: 's'
  CalcTaxesWithZipAddressObject:
    description: 'The object used for calculating taxes with Zip Address.'
    required:
      - aTransaction
    properties:
      aTransaction:
        $ref: '#/definitions/Transaction'
    xml:
      name: CalcTaxesWithZipAddress
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  CalcTaxesWithZipAddressRespEnvelope:
    description: 'Transaction data for performing tax calculations.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CalcTaxesWithZipAddressResponse:
            type: object
            title: CalcTaxesWithZipAddressResponse
            xml:
              name: CalcTaxesWithZipAddressResponse
              namespace: 'http://tempuri.org/'
            properties:
              CalcTaxesWithZipAddressResult:
                type: object
                title: CalcTaxesWithZipAddressResult
                xml:
                  name: CalcTaxesWithZipAddressResult
                properties:
                  TaxData:
                    type: array
                    items:
                      "$ref": "#/definitions/TaxData"
                    description: 'An array of TaxData objects containing the returned tax data.'

# ================================
# === Fips To PCode Envelope ===
  FipsToPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/FipsToPCodeBody'
  FipsToPCodeBody:
    description: 'Container for the request payload.'
    required:
      - FipsToPCode
    properties:
      FipsToPCode:
        $ref: '#/definitions/FipsToPCodeObject'
    xml:
      name: Body
      prefix: 's'
  FipsToPCodeObject:
    description: 'The object used for converting a FIPS code to a PCode.'
    required:
      - aFips
    properties:
      aFips:
        type: number
        format: integer
        xml:
          prefix: tem
    xml:
      name: FipsToPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  FipsToPCodeRespEnvelope:
    description: 'Returns the PCode corresponding to the submitted FIPS value.'
    xml:
      name: FipsToPCodeResponse
      namespace: 'http://tempuri.org/'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          FipsToPCodeResponse:
            type: object
            title: FipsToPCodeResponse
            xml:
              name: FipsToPCodeResponse
            required:
              - FipsToPCodeResult
            properties:
              FipsToPCodeResult:
                type: number
                format: integer
                example: 2604100
                description: 'The PCode corresponding to the FIPS value sent via the Request.'

# ===========================
# === GetAddress Envelope ===
  GetAddressEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetAddressBody'
  GetAddressBody:
    description: 'Container for the request payload.'
    required:
      - GetAddress
    properties:
      GetAddress:
        $ref: '#/definitions/GetAddressObject'
    xml:
      name: Body
      prefix: 's'
  GetAddressObject:
    description: 'The object used for getting an address.'
    required:
      - aPCode
    properties:
      aPCode:
        type: number
        format: integer
        xml:
          prefix: tem
    xml:
      name: GetAddress
      prefix: tem
      namespace: "http://tempuri.org/"
#------------
  GetAddressRespEnvelope:
    description: 'This method returns the addresses for the specified jurisdiction.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetAddressResponse:
            type: object
            title: GetAddressResponse
            xml:
              name: GetAddressResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetAddressResult
            properties:
              GetAddressResult:
                type: array
                description: 'Array of addresses.'
                items:
                  $ref: '#/definitions/AddressDataArray'
  AddressDataArray:
    properties:
      AddressData:
        $ref: '#/definitions/ZipAddress'

# ============================
# === CreateReportEnvelope ===
  CreateReportEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/CreateReportBody'
  CreateReportBody:
    description: 'Container for the request payload.'
    required:
      - CreateReport
    properties:
      CreateReport:
        $ref: '#/definitions/CreateReportObject'
    xml:
      name: Body
      prefix: 's'
  CreateReportObject:
    description: 'The object used to request creation of a report.'
    required:
      - CreateReport
    properties:
      CreateReport:
        $ref: '#/definitions/CreateReport'
    xml:
      name: CreateReport
      prefix: tem
      namespace: 'http://tempuri.org/'

  CreateReport:
    required:
      - reportInfo
    properties:
      reportInfo:
        $ref: '#/definitions/reportInfo'

  reportInfo:
    description: 'Fields that specify the reports to provide, the type of sorted report to generate, the sepcifications for the sorted report and the email delivery address. Note: If TimeSpan is provided, EndDate is not required.'
    xml:
      prefix: tem
      namespace: 'xmlns:ezt="http://schemas.datacontract.org/2004/07/EZTaxWebService" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"'
    required:
      - EmailAddress
      - ReportType
      - StartDate
      - EndDate
      - TimeSpan
    properties:
        BaseReport:
          type: string
          description: 'When generating a �customlog� report, indicates'
          xml:
            prefix: ezt
        CreateNbaFile:
          type: boolean
          description: Indicates if non-billable amounts should be placed in a separate file.
          xml:
            prefix: ezt
        CreateNcaFile:
          type: boolean
          description: Indicates if non-compliance amounts should be placed in a separate file.
          xml:
            prefix: ezt
        CustomLogFields:
          $ref: '#/definitions/CustomLogFields'
        EmailAddress:
          type: string
          description: Email address for receiving an email notification when the report has been generated (up to 100 characters).
          xml:
            prefix: ezt
        EndDate:
          type: string
          format: date-time
          description: End of date range for data to be included in the report. This field is not required if TimeSpan is specified.
          xml:
            prefix: ezt
        FileExtension:
          type: string
          description: Extension for output file (up to 5 characters).
          xml:
            prefix: ezt
        FileName:
          type: string
          description: Name for output file (up to 100 characters).
          xml:
            prefix: ezt
        IncludeHeaders:
          type: boolean
          description: Indicates if the columns headers should be included in the first row of the report output.
          xml:
            prefix: ezt
        Precision:
          type: integer
          description: Number of decimal places for computed values.
          xml:
            prefix: ezt
        ReportType:
          type: string
          description: "Name of report type to be generated. Report types inlcude: srtcomma20l, srtcomma20l-p, srtcomma20ld, srtcommadetail and customlog. Refer to sectin Report Types in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for details."
          xml:
            prefix: ezt
        StartDate:
          type: string
          format: date-time
          description: Beginning of date range for data to be included in the report.
          xml:
            prefix: ezt
        TimeSpan:
          type: string
          format: 'P#D where # is the number of days.'
          description: TimeSpan for the date range to be included in the report (e.g. number of days after StartDate). This field is not required if EndDate is specified.
          xml:
            prefix: ezt

  CustomLogFields:
    type: object
    description: Container for zero or more CustomLogField sepcifications.
    required:
      - CustomLogField
    properties:
      CustomLogField:
        $ref: '#/definitions/CustomLogField'

  CustomLogField:
    type: array
    items:
      $ref: '#/definitions/CustomLogFieldList'

  CustomLogFieldList:
    description: 'List of columns to include in the report when using the �customlog� report type.'
    xml:
      prefix: ezt
    required:
      - Column
      - Include
      - Sort
    properties:
      Column:
        type: string
        description: "Name of column. Refer to Custom Log Report Columns in either 'TM_00116_AFC SaaS Pro Telecom Developer Manual.pdf' or 'TM_00117_AFC SaaS Pro Sales and Use Developer Manual.pdf' for details. There are 51 column names available for use."
        xml:
          prefix: ezt
      Include:
        type: boolean
        description: Indicates if the column should be included in the output.
        xml:
          prefix: ezt
      Sort:
        type: boolean
        description: Indicates if the column should be used for sorting.
        xml:
          prefix: ezt

#------------
  CreateReportRespEnvelope:
    description: 'Returns a boolean as a string. "true" indicates success and "false" indicates failure.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          CreateReportResponse:
            type: object
            title: CreateReportResponse
            xml:
              name: CreateReportResponse
              namespace: 'http://tempuri.org/'
            properties:
              CreateReportResult:
                type: boolean
                example: true
                description: 'Submission status.'
                title: CreateReportResult
                xml:
                  name: CreateReportResult

# =================================
# === GetEZTaxDbVersionEnvelope ===
  GetEZTaxDbVersionEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetEZTaxDbVersionBody'
  GetEZTaxDbVersionBody:
    description: 'Container for the request payload.'
    required:
      - GetEZTaxDbVersion
    properties:
      GetEZTaxDbVersion:
        $ref: '#/definitions/GetEZTaxDbVersion'
    xml:
      name: Body
      prefix: 's'
  GetEZTaxDbVersion:
    description: 'The request to fetch the database version.'
    xml:
      name: GetEZTaxDbVersion
      prefix: tem
    properties: {}
#------------
  GetEZTaxDbVersionRespEnvelope:
    description: 'Returns the version of the AFC database as a string.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetEZTaxDbVersionResponse:
            type: object
            title: GetEZTaxDbVersionResponse
            xml:
              name: GetEZTaxDbVersionResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetEZTaxDbVersionResult
            properties:
              GetEZTaxDbVersionResult:
                type: string
                format: 'Major Version.Minor Version.Build YYMM.Build Release'
                example: '9.15.1610.1'
                description: 'The version of the underlying AFC database used by the AFC engine.'
                xml:
                  name: GetEZTaxDbVersionResult

# ===============================
# === GetEZTaxVersionEnvelope ===
  GetEZTaxVersionEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetEZTaxVersionBody'
  GetEZTaxVersionBody:
    description: 'Container for the request payload.'
    required:
      - GetEZTaxVersion
    properties:
      GetEZTaxVersion:
        $ref: '#/definitions/GetEZTaxVersion'
    xml:
      name: Body
      prefix: 's'
  GetEZTaxVersion:
    description: 'The request to fetch the EZTax Net version.'
    properties: {}
    xml:
      name: GetEZTaxVersion
      prefix: tem
#------------
  GetEZTaxVersionRespEnvelope:
    description: 'Returns the tax engine version information as a string.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetEZTaxVersionResponse:
            type: object
            title: GetEZTaxVersionResponse
            xml:
              name: GetEZTaxVersionResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetEZTaxVersionResult
            properties:
              GetEZTaxVersionResult:
                type: string
                format: 'Major Version.Minor Version.Build YYMM.Build Release'
                example: '9.15.1609.1'
                description: 'The tax engine version.'
                xml:
                  name: GetEZTaxVersionResult

# ====================
# === GetOptionalFieldKeyDescEnvelope ===
  GetOptionalFieldKeyDescEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetOptionalFieldKeyDescBody'
  GetOptionalFieldKeyDescBody:
    description: 'Container for the request payload.'
    required:
      - GetOptionalFieldKeyDesc
    properties:
      GetOptionalFieldKeyDesc:
        $ref: '#/definitions/GetOptionalFieldKeyDesc'
    xml:
      name: Body
      prefix: 's'
  GetOptionalFieldKeyDesc:
    description: 'The request to retrieve the Field Key Descriptions.'
    properties: {}
    xml:
      name: GetOptionalFieldKeyDesc
      prefix: tem
#------------
  GetOptionalFieldKeyDescRespEnvelope:
    description: 'Returns the Field Key Descriptions.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetOptionalFieldKeyDescResponse:
            type: object
            title: GetOptionalFieldKeyDescResponse
            xml:
              name: GetOptionalFieldKeyDescResponse
              namespace: 'http://tempuri.org/'
            properties:
              GetOptionalFieldKeyDescResult:
                type: object
                title: GetOptionalFieldKeyDescResult
                xml:
                  name: GetOptionalFieldKeyDescResult
                  namespace: 'xmlns:a="http://schemas.datacontract.org/2004/07/EZTaxWebService" xmlns:i="http://www.w3.org/2001/XMLSchema-instance"'
                properties:
                  OptionalKey:
                    type: array
                    items:
                      "$ref": "#/definitions/OptionalKeyData"
                    description: 'An array of Optional Field Key Description objects containing the optional field key information.'

# =============================
# === GetServerTimeEnvelope ===
  GetServerTimeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetServerTimeBody'
  GetServerTimeBody:
    description: 'Container for the request payload.'
    required:
      - GetServerTime
    properties:
      GetServerTime:
        $ref: '#/definitions/GetServerTimeObject'
    xml:
      name: Body
      prefix: 's'
  GetServerTimeObject:
    description: 'The object used to get the current server time. Syntax: a: GetServerTime /'
    properties: {}
    xml:
      name: GetServerTime
      prefix: tem
#------------
  GetServerTimeRespEnvelope:
    description: 'Returns the server date and time as a formatted string.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetServerTimeResponse:
            type: object
            title: GetServerTimeResponse
            xml:
              name: GetServerTimeResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetServerTimeResult
            properties:
              GetServerTimeResult:
                title: GetServerTimeResult
                xml:
                  name: GetServerTimeResult
                type: string
                format: date-time
                example: 2016-09-22T14:18:50.3898615-05:00
                description: 'A formatted date-time string of the current server time.'

# ===========================
# === GetTaxCategory Envelope ===
  GetTaxCategoryEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetTaxCategoryBody'
  GetTaxCategoryBody:
    description: 'Container for the request payload.'
    required:
      - GetTaxCategory
    properties:
      GetTaxCategory:
        $ref: '#/definitions/GetTaxCategoryObject'
    xml:
      name: Body
      prefix: 's'
  GetTaxCategoryObject:
    description: 'The object used for fetching a Tax Type Category string.'
    required:
      - aTaxType
    properties:
      aTaxType:
        type: number
        format: integer
        description: 'The tax type.'
        example: 1
        xml:
          prefix: tem
    xml:
      name: GetTaxCategory
      prefix: tem
#------------
  GetTaxCategoryRespEnvelope:
    description: 'This method returns a string describing the tax category for the specified tax type.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetTaxCategoryResponse:
            type: object
            title: GetTaxCategoryResponse
            xml:
              name: GetTaxCategoryResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetTaxCategoryResult
            properties:
              GetTaxCategoryResult:
                type: string
                description: 'The string describing the tax category.'
                example: SALES AND USE TAXES

# ===========================
# === GetTaxDescription Envelope ===
  GetTaxDescriptionEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetTaxDescriptionBody'
  GetTaxDescriptionBody:
    description: 'Container for the request payload.'
    required:
      - GetTaxDescription
    properties:
      GetTaxDescription:
        $ref: '#/definitions/GetTaxDescriptionObject'
    xml:
      name: Body
      prefix: 's'
  GetTaxDescriptionObject:
    description: 'The object used for fetching a Tax Type Description string.'
    required:
      - aTaxType
    properties:
      aTaxType:
        type: number
        format: integer
        description: 'The tax type.'
        example: 1
        xml:
          prefix: tem
    xml:
      name: GetTaxDescription
      prefix: tem
#------------
  GetTaxDescriptionRespEnvelope:
    description: 'This method returns a string describing the tax description for the specified tax type.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetTaxDescriptionResponse:
            type: object
            title: GetTaxDescriptionResponse
            xml:
              name: GetTaxDescriptionResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetTaxDescriptionResult
            properties:
              GetTaxDescriptionResult:
                type: string
                description: 'The string describing the specified tax type.'
                example: Sales Tax

# ==============================
# === Get Tax Rates Envelope ===
  GetTaxRatesEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetTaxRatesBody'
  GetTaxRatesBody:
    description: 'Container for the request payload.'
    required:
      - GetTaxRates
    properties:
      GetTaxRates:
        $ref: '#/definitions/GetTaxRatesObject'
    xml:
      name: Body
      prefix: 's'
  GetTaxRatesObject:
    description: 'The object used for getting tax rates.'
    required:
      - PCode
    properties:
      PCode:
        type: number
        format: integer
        xml:
          prefix: ezt
    xml:
      name: GetTaxRates
      prefix: ezt
      namespace: 'http://tempuri.org/'
#------------
  GetTaxRatesRespEnvelope:
    description: 'Determines the tax rate information for a jurisdiction identified by the input PCode.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetTaxRatesResponse:
            type: object
            title: GetTaxRatesResponse
            xml:
              name: GetTaxRatesResponse
              namespace: 'http://tempuri.org/'
            properties:
              GetTaxRatesResult:
                type: object
                title: GetTaxRatesResult
                xml:
                  name: GetTaxRatesResult
                properties:
                  TaxRateInfo:
                    type: array
                    xml:
                      prefix: a
                    items:
                      "$ref": "#/definitions/TaxRateInfo"
                    description: 'Tax rate information for the specified jurisdiction.'

# ============================
# === Get Version Envelope ===
  GetVersionEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: 'http://schemas.xmlsoap.org/soap/envelope/'
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/GetVersionBody'
  GetVersionBody:
    description: 'Container for the request payload.'
    required:
      - GetVersion
    properties:
      GetVersion:
        $ref: '#/definitions/GetVersion'
    xml:
      name: Body
      prefix: 's'
  GetVersion:
    description: 'The request to fetch the Web Service version.'
    properties: {}
    xml:
      name: GetVersion
      prefix: a
#------------
  GetVersionRespEnvelope:
    description: 'Returns the version of the AFC SaaS Pro Web Service as a string.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          GetVersionResponse:
            type: object
            title: GetVersionResponse
            xml:
              name: GetVersionResponse
              namespace: 'http://tempuri.org/'
            required:
              - GetVersionResult
            properties:
              GetVersionResult:
                type: string
                format: 'Major Version.Minor Version.Build YYMM.Build Release'
                example: "2.15.1606.1"
                description: 'AFC SaaS Pro Web Service version.'
                xml:
                  name: GetVersionResult

# ================================
# === NpaNxx To PCode Envelope ===
  NpaNxxToPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/NpaNxxToPCodeBody'
  NpaNxxToPCodeBody:
    description: 'Container for the request payload.'
    required:
      - NpaNxxToPCode
    properties:
      NpaNxxToPCode:
        $ref: '#/definitions/NpaNxxToPCodeObject'
    xml:
      name: Body
      prefix: 's'
  NpaNxxToPCodeObject:
    description: 'The object used for converting an NpaNxx to PCode.'
    required:
      - anNpaNxx
    properties:
      anNpaNxx:
        type: number
        format: integer
        xml:
          prefix: tem
    xml:
      name: NpaNxxToPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  NpaNxxToPCodeRespEnvelope:
    description: 'Returns the PCode corresponding to the submitted NpaNxx value.'
    xml:
      name: NpaNxxToPCodeResponse
      namespace: 'http://tempuri.org/'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          NpaNxxToPCodeResponse:
            type: object
            title: NpaNxxToPCodeResponse
            xml:
              name: NpaNxxToPCodeResponse
            required:
              - NpaNxxToPCodeResult
            properties:
              NpaNxxToPCodeResult:
                type: number
                format: integer
                example: 4482200
                description: 'The PCode corresponding to the NpaNxx value sent via the Request.'

# ================================
# === PCode To Fips Envelope ===
  PCodeToFipsEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/PCodeToFipsBody'
  PCodeToFipsBody:
    description: 'Container for the request payload.'
    required:
      - PCodeToFips
    properties:
      PCodeToFips:
        $ref: '#/definitions/PCodeToFipsObject'
    xml:
      name: Body
      prefix: 's'
  PCodeToFipsObject:
    description: 'The object used for converting a PCode to a FIPS code.'
    required:
      - aPCode
    properties:
      aPCode:
        type: number
        format: integer
        xml:
          prefix: tem
    xml:
      name: PCodeToFips
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  PCodeToFipsRespEnvelope:
    description: 'Returns the FIPS code corresponding to the submitted PCode value.'
    xml:
      name: PCodeToFipsResponse
      namespace: 'http://tempuri.org/'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          PCodeToFipsResponse:
            title: PCodeToFipsResponse
            xml:
              name: PCodeToFipsResponse
            required:
             - PCodeToFipsResult
            properties:
              PCodeToFipsResult:
                type: number
                format: integer
                example: 3606184094
                description: 'The FIPS code corresponding to the PCode value sent via the Request.'

# ====================
# === ProcessCustomerBatchEnvelope ===
  ProcessCustomerBatchEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/ProcessCustomerBatchBody'
  ProcessCustomerBatchBody:
    description: 'Container for the request payload.'
    required:
      - ProcessCustomerBatch
    properties:
      ProcessCustomerBatch:
        $ref: '#/definitions/ProcessCustomerBatchObject'
    xml:
      name: Body
      prefix: 's'
  ProcessCustomerBatchObject:
    description: 'The object used to submit a Process Customer Batch request.'
    required:
      - custBatchId
    properties:
      custBatchId:
        $ref: '#/definitions/custBatchId'
      returnDetail:
        type: boolean
        example: true
        description: Request detailed tax data in addition to summarized taxes.
      nexus:
        type: object
        xml:
          name: nexus
          prefix: tem
        description: An array of zero or more nexus entries.
        properties:
          Nexus:
            type: array
            items:
              $ref: '#/definitions/Nexus'
      exclusions:
        type: object
        xml:
          name: exclusions
          prefix: tem
        description: An array of zero or more exclusions.
        properties:
          Exclusion:
            type: array
            items:
              $ref: '#/definitions/Exclusion'
    xml:
      name: ProcessCustomerBatch
      prefix: tem
#------------
  ProcessCustomerBatchRespEnvelope:
    description: 'Returns a CustomerTaxData array containing the summarized taxes for the customer batch. And, if requested, an array of TaxData objects for each individual transaction processed.'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          ProcessCustomerBatchResponse:
            type: object
            title: ProcessCustomerBatchResponse
            xml:
              name: ProcessCustomerBatchResponse
              namespace: 'http://tempuri.org/'
            properties:
              ProcessCustomerBatchResult:
                type: object
                title: ProcessCustomerBatchResult
                xml:
                  name: ProcessCustomerBatchResult
                properties:
                  SummarizedTaxes:
                    type: object
                    title: SummarizedTaxes
                    xml:
                      name: SummarizedTaxes
                    properties:
                      CustomerTaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/CustomerTaxData"
                        description: 'CustomerTaxData array containing zero or more summarized taxes for the customer batch.'
                  Taxes:
                    type: object
                    title: Taxes
                    xml:
                      name: Taxes
                    properties:
                      TaxData:
                        type: array
                        items:
                          "$ref": "#/definitions/TaxData"
                        description: 'An array containing zero or more TaxData objects for each individual transaction processed.'

# ====================
# === UpdateOptionalFieldKeyDescEnvelope ===
  UpdateOptionalFieldKeyDescEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/UpdateOptionalFieldKeyDescBody'
  UpdateOptionalFieldKeyDescBody:
    description: 'Container for the request payload.'
    required:
      - UpdateOptionalFieldKeyDesc
    properties:
      UpdateOptionalFieldKeyDesc:
        $ref: '#/definitions/UpdateOptionalFieldKeyDesc'
    xml:
      name: Body
      prefix: 's'
  UpdateOptionalFieldKeyDesc:
    description: 'The object used to update a single Optional Field Key Description.'
    required:
      - optionalFieldDesc
    properties:
      optionalFieldDesc:
        $ref: '#/definitions/optionalFieldDesc'
    xml:
      name: optionalFieldDesc
      prefix: tem
      namespace: 'http://tempuri.org/'
  optionalFieldDesc:
    type: object
    xml:
      prefix: tem
      namespace: ' xmlns:ezt="http://schemas.datacontract.org/2004/07/EZTaxWebService" xmlns:i="http://www.w3.org/2001/XMLSchema-instance">'
    required:
      - OptionalKey
    properties:
      OptionalKey:
        $ref: "#/definitions/OptionalKeyData"
#------------
  UpdateOptionalFieldKeyDescRespEnvelope:
    description: 'Retruns a boolean value indicating success (true) or failure (false).'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          UpdateOptionalFieldKeyDescResponse:
            type: object
            title: UpdateOptionalFieldKeyDescResponse
            xml:
              name: UpdateOptionalFieldKeyDescResponse
              namespace: 'http://tempuri.org/'
            properties:
              UpdateOptionalFieldKeyDescResult:
                type: boolean
                title: UpdateOptionalFieldKeyDescResult
                example: true
                description: Boolean indicating success (true) or failure (false).
                xml:
                  name: UpdateOptionalFieldKeyDescResult

# ================================
# === Zip To PCode Envelope ===
  ZipToPCodeEnvelope:
    xml:
      name: Envelope
      prefix: s
      namespace: *namespace_value
    required:
      - Header
      - Body
    properties:
      Header:
        $ref: '#/definitions/Header'
      Body:
        $ref: '#/definitions/ZipToPCodeBody'
  ZipToPCodeBody:
    description: 'Container for the request payload.'
    required:
      - ZipToPCode
    properties:
      ZipToPCode:
        $ref: '#/definitions/ZipToPCodeObject'
    xml:
      name: Body
      prefix: 's'
  ZipToPCodeObject:
    description: 'The object used for converting a zip address to PCode.'
    required:
      - aZipAddress
    properties:
      aZipAddress:
        $ref: "#/definitions/ZipAddress"
    xml:
      name: ZipToPCode
      prefix: tem
      namespace: 'http://tempuri.org/'
#------------
  ZipToPCodeRespEnvelope:
    description: 'Returns the PCode corresponding to the submitted zip address.'
    xml:
      name: ZipToPCodeResponse
      namespace: 'http://tempuri.org/'
    properties:
      Header:
        $ref: '#/definitions/HeaderResp'
      Body:
        type: object
        properties:
          ZipToPCodeResponse:
            type: object
            title: ZipToPCodeResponse
            xml:
              name: ZipToPCodeResponse
            required:
              - ZipToPCodeResult
            properties:
              ZipToPCodeResult:
                type: number
                format: integer
                example: 2604100
                description: 'The PCode corresponding to the zip address submitted via the Request.'




#0   %%%%%%%%%%%%
# ====================
# === xxxxEnvelope ===
#0  xxxxEnvelope:
#0    xml:
#0      name: Envelope
#0      prefix: s
#0      namespace: *namespace_value
#0    required:
#0      - Header
#0      - Body
#0    properties:
#0      Header:
#0        $ref: '#/definitions/Header'
#0      Body:
#0        $ref: '#/definitions/xxxxBody'
#0  xxxxBody:
#0    description: 'Container for the request payload.'
#0    required:
#0      - xxxx
#0    properties:
#0      xxxx:
#0        $ref: '#/definitions/xxxxObject'
#0    xml:
#0      name: Body
#0      prefix: 's'
#0  xxxxObject:
#0    description: '???????????????????.'
#0  -- Either --
#0    required:
#0      - aTransaction
#0    properties:
#0      aTransaction:
#0  -- ----- OR ----- --
#0      anAdjustment: (%%%%% Must also change -aTransaction to -anAdjustment)
#0        $ref: '#/definitions/Transaction'
#0  -- Or --
#0    required:
#0      - anxxxx
#0    properties:
#0      anxxxx:
#0        type: myType
#0        format: myFormat
#0        xml:
#0          prefix: a
#0  -- End Either Or --
#0    xml:
#0      name: xxxx
#0      prefix: tem
#0      namespace: 'http://tempuri.org/'
#0
#0
#0
#------------
#0  xxxxRespEnvelope:
#0    description: '???????????.'
#0    properties:
#0      Header:
#0        $ref: '#/definitions/HeaderResp'
#0      Body:
#0        type: object
#0        properties:
#0          xxxxResponse:
#0            type: object
#0            title: xxxxResponse
#0            xml:
#0              name: xxxxResponse
#0              namespace: 'http://tempuri.org/'
#0            properties:
#0              xxxxResult:
#0                type: object
#0                title: xxxxResult
#0                xml:
#0                  name: xxxxResult
#0                properties:
#0                  myValue:
#0                    type: myType
#0                    format: myFormat
#0                    example: myExample
#0                    description: '?????????????.'
#0                  TaxData:
#0                    type: array
#0                    items:
#0                      "$ref": "#/definitions/TaxData"
#0                    description: 'An array of TaxData objects containing the returned tax data.'
#0xxxx
